{"version":3,"file":"kendo.mediaplayer.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendomediaplayer","js","this","$","undefined$1","kendo","window","END","PAUSE","PLAY","READY","TIMECHANGE","VOLUMECHANGE","FULLSCREEN_ENTER","FULLSCREEN_EXIT","MUTE","LOW_VOLUME","HIGH_VOLUME","VIDEO_QUALITY","STATE_PLAY","STATE_PAUSE","TITLEBAR","TOOLBAR","SLIDER","VOLUME_SLIDER","MEDIA","OVERLAY","YTPLAYER","DOT","STATE_PLAY_SELECTOR","FULLSCREEN_ENTER_SELECTOR","ui","ns","baseTime","Date","timeZoneSec","getTimezoneOffset","Widget","isArray","Array","timeFormats","template","keys","templates","htmlPlayer","titleBar","toolBar","youtubePlayer","toolBarTime","slider","volumeSlider","qualityDropDown","toolTip","ref","value","toString","MediaPlayer","extend","init","element","options","wrapper","fn","call","addClass","_currentIndex","_createTitlebar","_createToolbar","_createDropDown","_createSlider","_createVolumeSlider","_timers","_aria","_navigatable","fullScreen","media","notify","events","name","autoPlay","autoRepeat","volume","mute","navigatable","forwardSeek","messages","pause","play","unmute","quality","fullscreen","_msToTime","ms","time","getTime","setSeconds","_timeToSec","_titleBar","find","length","append","sliderElement","_slider","_sliderDragChangeHandler","_sliderDragChange","bind","_sliderDraggingHandler","_sliderDragging","Slider","smallStep","tickPlacement","showButtons","change","slide","tooltip","dragHandleTitle","volumeSliderElement","_volumeSlider","_volumeDraggingHandler","_volumeDragging","_volumeChangeHandler","_volumeChange","width","min","max","enabled","_resetTime","_youTubeVideo","_ytmedia","seekTo","_media","currentTime","_mediaTimeUpdate","grep","_toolBar","items","e","_currentUrl","source","url","_isYouTubeUrl","match","_setPlayerUrl","oldPlayer","stop","toggle","initialized","_initializePlayer","_videoOverlay","hide","loadVideoById","_getMediaId","_playStateToggle","cueVideoById","show","remove","attr","toolBarElement","_toolbarClickHandler","_toolbarClick","ToolBar","click","resizable","type","attributes","class","icon","fillMode","off","before","_volumeButton","_fullscreenButton","_currentTimeElement","_durationElement","_playButton","_playButtonSpan","support","cssFlexbox","wrapAll","hdIcon","dropDownElement","data","_dropDownSelectHandler","_dropDownSelect","_dropDown","DropDownList","dataTextField","dataValueField","popup","position","origin","appendTo","animation","open","effects","duration","select","setDataSource","replaceWith","list","item","index","target","children","first","isPaused","is","_isInFullScreen","muted","_isDragging","that","sender","tzOffset","_sliderChangeFired","_seekBarLastPosition","setTimeout","trigger","_preventPlay","_changeVolumeButtonImage","volumeButton","volumeElement","getCurrentTime","timeInMs","text","_timeFormat","isPlaying","_mediaEnded","_mediaPlay","_mediaReady","_mediaDurationChange","durationTime","getDuration","getHours","setOptions","_isFirstRun","_createYoutubePlayer","_mediaTimeUpdateHandler","_mediaDurationChangeHandler","prepend","_ytPlayer","css","height","YT","Player","_configurePlayer","onYouTubeIframeAPIReadyRegister","getScript","onYouTubeIframeAPIReady","i","_youtubeApiReady","_poll","callback","interval","context","clearTimeout","callLater","vars","autoplay","wmode","controls","rel","showinfo","_onYouTubePlayerReady","onYouTubePlayerReady","_onPlayerStateChangeHandler","_onPlayerStateChange","onPlayerStateChange","videoId","playerVars","onReady","onStateChange","event","getIframe","style","_updateTitle","titlebar","title","_paused","setVolume","_uiDisplay","result","_mouseClick","_mouseMoveHandler","_mouseMove","_mouseInHandler","_mouseIn","_mouseOutHandler","_mouseOut","on","_createHtmlPlayer","_mouseClickHanlder","_mediaEndedHandler","_mediaCanPlayHandler","_mediaPlayHandler","after","ontimeupdate","ondurationchange","oncanplay","onplay","onended","loop","_mouseIdle","state","animationSpeed","uiElements","add","parent","fadeIn","fadeOut","destroy","_keyDownHandler","_fullscreenHandler","_youtubeApiReadyHandler","src","_mouseMoveTimer","seek","seconds","playVideo","mobileOS","stopVideo","pauseVideo","toolbar","dropdown","enterFullScreen","get","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","document","cancelFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msCancelFullscreen","exitFullscreen","msExitFullscreen","removeClass","resize","_volume","currentState","isMuted","unMute","getVolume","isEnded","getPlayerState","ended","_mediaData","_fullscreen","_keyDown","isFullScreen","mozFullScreen","webkitIsFullScreen","fullscreenSpan","preventDefault","fsButton","keyCode","SPACEBAR","ENTER","ESC","_error","_progress","plugin","jQuery"],"sources":["kendo.mediaplayer.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.slider.js'), require('kendo.toolbar.js'), require('kendo.dropdownlist.js'), require('kendo.tooltip.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.slider', 'kendo.toolbar', 'kendo.dropdownlist', 'kendo.tooltip', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendomediaplayer = global.kendomediaplayer || {}, global.kendomediaplayer.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n            id: \"mediaplayer\",\n            name: \"MediaPlayer\",\n            category: \"web\",\n            description: \"\",\n            depends: [\"slider\", \"toolbar\", \"dropdownlist\", \"tooltip\", \"icons\"]\n        };\n\n        (function($, undefined$1) {\n            var kendo = window.kendo,\n                END = \"end\",\n                PAUSE = \"pause\",\n                PLAY = \"play\",\n                READY = \"ready\",\n                TIMECHANGE = \"timeChange\",\n                VOLUMECHANGE = \"volumeChange\",\n                FULLSCREEN_ENTER = \"fullscreen\",\n                FULLSCREEN_EXIT = \"fullscreen-exit\",\n                MUTE = \"volume-mute\",\n                LOW_VOLUME = \"volume-down\",\n                HIGH_VOLUME = \"volume-up\",\n                VIDEO_QUALITY = \"k-mediaplayer-quality\",\n                STATE_PLAY = \"play\",\n                STATE_PAUSE = \"pause\",\n                TITLEBAR = \"k-mediaplayer-titlebar\",\n                TITLE = \"k-title\",\n                TOOLBARWRAP = \"k-mediaplayer-toolbar-wrap\",\n                TOOLBAR = \"k-mediaplayer-toolbar\",\n                SLIDER = \"k-mediaplayer-seekbar\",\n                VOLUME_SLIDER = \"k-mediaplayer-volume\",\n                MEDIA = \"k-mediaplayer-media\",\n                OVERLAY = \"k-mediaplayer-overlay\",\n                YTPLAYER = \"k-mediaplayer-yt\",\n                DOT = \".\",\n                STATE_PLAY_SELECTOR = 'span[class*=\"i-' + STATE_PLAY + '\"]',\n                STATE_PAUSE_SELECTOR = 'span[class*=\"i-' + STATE_PAUSE + '\"]',\n                FULLSCREEN_ENTER_SELECTOR = 'span[class*=\"i-' + FULLSCREEN_ENTER + '\"]',\n                FULLSCREEN_EXIT_SELECTOR = 'span[class*=\"i-' + FULLSCREEN_EXIT + '\"]',\n                MUTE_SELECTOR = 'span[class*=\"i-' + MUTE + '\"]',\n                LOW_VOLUME_SELECTOR = 'span[class*=\"i-' + LOW_VOLUME + '\"]',\n                HIGH_VOLUME_SELECTOR = 'span[class*=\"i-' + HIGH_VOLUME + '\"]',\n                ui = kendo.ui,\n                ns = \".kendoMediaPlayer\",\n                baseTime = new Date(1970, 0, 1),\n                timeZoneSec = baseTime.getTimezoneOffset() * 60,\n                Widget = kendo.ui.Widget,\n                isArray = Array.isArray,\n                timeFormats = {\n                    shortTime: \"mm:ss\",\n                    longTime: \"HH:mm:ss\"\n                },\n                template = kendo.template,\n                keys = kendo.keys,\n                templates = {\n                    htmlPlayer: function () { return \"<video class='\" + MEDIA + \"'> </video>\"; },\n                    titleBar: template(function () { return \"<div class='\" + TITLEBAR + \"'><span class='\" + TITLE + \"'>Video Title</span></div>\"; }),\n                    toolBar: function () { return \"<div class='\" + TOOLBARWRAP + \"'><div class='\" + TOOLBAR + \"'></div></div>\"; },\n                    youtubePlayer: function () { return \"<div class='\" + YTPLAYER + \"'> </div>\"; },\n                    toolBarTime: function () { return \"<span class='k-mediaplayer-currenttime'>00:00:00</span> / <span class='k-mediaplayer-duration'>00:00:00</span>\"; },\n                    slider: function () { return \"<input class='\" + SLIDER + \"' value='0' title='seekbar' />\"; },\n                    volumeSlider: function () { return \"<input class='\" + VOLUME_SLIDER + \"' title='volume'/>\"; },\n                    qualityDropDown: function () { return \"<input class='\" + VIDEO_QUALITY + \"' title='video quality' />\"; },\n                    toolTip: function (ref) {\n                        var value = ref.value;\n\n                        return (\"\" + (kendo.toString(new Date(value), 'HH:mm:ss')));\n            }\n                };\n\n            var MediaPlayer = Widget.extend({\n                init: function(element, options) {\n                    this.wrapper = $(element);\n\n                    Widget.fn.init.call(this, element, options);\n\n                    this.wrapper.addClass(\"k-mediaplayer k-widget\");\n\n                    options = this.options;\n\n                    this._currentIndex = 0;\n\n                    this._createTitlebar();\n\n                    this._createToolbar();\n\n                    this._createDropDown();\n\n                    this._createSlider();\n\n                    this._createVolumeSlider();\n\n                    this._timers = {};\n\n                    this._aria();\n\n                    this._navigatable();\n\n                    if (options.fullScreen) {\n                        this.fullScreen(true);\n                    }\n\n                    if (options.media) {\n                        this.media(this.options.media);\n                    }\n\n                    kendo.notify(this);\n                },\n\n                events: [\n                    END,\n                    PAUSE,\n                    PLAY,\n                    READY,\n                    TIMECHANGE,\n                    VOLUMECHANGE\n                ],\n\n                options: {\n                    name: \"MediaPlayer\",\n                    autoPlay: false,\n                    autoRepeat: false,\n                    volume: 100,\n                    fullScreen: false,\n                    mute: false,\n                    navigatable: false,\n                    forwardSeek: true,\n                    media: null,\n                    messages: {\n                        \"pause\": \"Pause\",\n                        \"play\": \"Play\",\n                        \"mute\": \"Mute\",\n                        \"unmute\": \"Unmute\",\n                        \"quality\": \"Quality\",\n                        \"fullscreen\": \"Full Screen\"\n                    }\n                },\n\n                _msToTime: function(ms) {\n                    var time = new Date(baseTime.getTime());\n                    time.setSeconds(ms);\n                    return time;\n                },\n\n                _timeToSec: function(time) {\n                    var curTime = new Date(time).getTime();\n                    return curTime / 1000;\n                },\n\n                _createTitlebar: function() {\n                    this._titleBar = this.wrapper.find(DOT + TITLEBAR);\n                    if (this._titleBar.length === 0) {\n                        this.wrapper.append(templates.titleBar);\n                        this._titleBar = this.wrapper.find(DOT + TITLEBAR);\n                    }\n                },\n\n                _createSlider: function() {\n                    var sliderElement = this.wrapper.find(DOT + SLIDER);\n                    if (!this._slider) {\n                        this._sliderDragChangeHandler = this._sliderDragChange.bind(this);\n                        this._sliderDraggingHandler = this._sliderDragging.bind(this);\n                        sliderElement = this.wrapper.find(DOT + SLIDER);\n\n                        this._slider = new ui.Slider(sliderElement[0], {\n                            smallStep: 1000,\n                            tickPlacement: \"none\",\n                            showButtons: false,\n                            change: this._sliderDragChangeHandler,\n                            slide: this._sliderDraggingHandler,\n                            tooltip: {\n                                template: templates.toolTip\n                            },\n                            dragHandleTitle: this.options.messages.time\n                        });\n                    }\n                },\n\n                _createVolumeSlider: function() {\n                    var volumeSliderElement = this.wrapper.find(DOT + VOLUME_SLIDER);\n                    if (!this._volumeSlider) {\n                        this._volumeDraggingHandler = this._volumeDragging.bind(this);\n                        this._volumeChangeHandler = this._volumeChange.bind(this);\n                        volumeSliderElement.width(87);\n                        this._volumeSlider = new ui.Slider(volumeSliderElement[0], {\n                            smallStep: 1,\n                            min: 0,\n                            max: 100,\n                            value: this.options.volume,\n                            slide: this._volumeDraggingHandler,\n                            change: this._volumeChangeHandler,\n                            tickPlacement: \"none\",\n                            showButtons: false,\n                            tooltip: { enabled: false },\n                            dragHandleTitle: this.options.messages.volume\n                        });\n                    }\n                },\n\n                _resetTime: function() {\n                    if (this._youTubeVideo) {\n                        this._ytmedia.seekTo(0, true);\n                    } else {\n                        this._media.currentTime = 0;\n                    }\n\n                    this._mediaTimeUpdate();\n                    $.grep(this._toolBar.options.items, function(e) { return !!e.template; }).template = templates.toolBarTime;\n                },\n\n                _currentUrl: function() {\n                    var media = this.media();\n                    return isArray(media.source) ? media.source[this._currentIndex].url : media.source;\n                },\n\n                _isYouTubeUrl: function() {\n                    return !!this._currentUrl().match(\"youtube.com/|youtu.be/\");\n                },\n\n                _setPlayerUrl: function() {\n                    var oldPlayer = this._youTubeVideo;\n                    this.stop();\n\n                    this._youTubeVideo = this._isYouTubeUrl();\n\n                    if (oldPlayer !== this._youTubeVideo) {\n                        this.wrapper.find(DOT + YTPLAYER).toggle();\n                        this.wrapper.find(DOT + MEDIA).toggle();\n                    }\n\n                    var initialized = this._media || this._ytmedia;\n\n                    this._initializePlayer();\n\n                    if (initialized) { //mute and volume settings should be persisted when switching between html and youtube players\n                        this.mute(this.mute());\n                        this.volume(this.volume());\n                    }\n\n                    if (!this._youTubeVideo) {\n                        this._videoOverlay.show();\n                        this.wrapper.find(DOT + MEDIA + \" > source\").remove();\n                        this.wrapper.find(DOT + MEDIA).attr(\"src\", this._currentUrl());\n\n                        if (this.options.autoPlay) {\n                            this.play();\n                        }\n                    }\n                    else if (this._ytmedia) {\n                        if (this._videoOverlay) {\n                            this._videoOverlay.hide();\n                        }\n                        if (this.options.autoPlay) {\n                            this._ytmedia.loadVideoById(this._getMediaId());\n                            this._playStateToggle(true);\n                        }\n                        else {\n                            this._ytmedia.cueVideoById(this._getMediaId());\n                            this._playStateToggle(true);\n                        }\n                    }\n                },\n\n                _createToolbar: function() {\n                    var toolBarElement = this.wrapper.find(DOT + TOOLBAR);\n                    if (toolBarElement.length === 0) {\n                        this._toolbarClickHandler = this._toolbarClick.bind(this);\n                        this.wrapper.append(templates.toolBar);\n                        toolBarElement = this.wrapper.find(DOT + TOOLBAR);\n                        toolBarElement.width(this.wrapper.find(DOT + MEDIA).width());\n                        this._toolBar = new ui.ToolBar(toolBarElement, {\n                            click: this._toolbarClickHandler,\n                            resizable: false,\n                            items: [\n                                {\n                                    type: \"button\",\n                                    attributes: { \"class\": \"k-play-button\" },\n                                    icon: \"play\",\n                                    fillMode: \"flat\"\n                                },\n                                {\n                                    template: templates.toolBarTime,\n                                    attributes: { \"class\": \"k-mediaplayer-currenttime-wrap\" }\n                                },\n                                {\n                                    type: \"spacer\"\n                                },\n                                {\n                                    type: \"button\",\n                                    attributes: { \"class\": \"k-volume-button\" },\n                                    icon: \"volume-up\",\n                                    fillMode: \"flat\"\n                                },\n                                {\n                                    template: templates.volumeSlider,\n                                    attributes: { \"class\": \"k-mediaplayer-volume-wrap\" }\n                                },\n                                {\n                                    template: templates.qualityDropDown,\n                                    attributes: { \"class\": \"k-mediaplayer-quality-wrap\" }\n                                },\n                                {\n                                    type: \"button\",\n                                    attributes: { \"class\": \"k-fullscreen-button\" },\n                                    icon: \"fullscreen\",\n                                    fillMode: \"flat\"\n                                }\n                            ]\n                        });\n\n                        this._toolBar.wrapper.off(\"keydown\");\n                        toolBarElement.before(templates.slider);\n\n                        this._volumeButton = toolBarElement.find(\".k-volume-button\");\n                        this._fullscreenButton = toolBarElement.find(\".k-fullscreen-button\");\n                        this._volumeButton.attr(\"title\", this.options.mute ? this.options.messages.unmute : this.options.messages.mute);\n                        this._volumeButton.attr(\"aria-label\", this.options.mute ? this.options.messages.unmute : this.options.messages.mute);\n                        this._fullscreenButton.attr(\"title\", this.options.messages.fullscreen);\n                        this._fullscreenButton.attr(\"aria-label\", this.options.messages.fullscreen);\n\n                        toolBarElement.width(\"auto\");\n                        this._currentTimeElement = toolBarElement.find(\".k-mediaplayer-currenttime\");\n                        this._durationElement = toolBarElement.find(\".k-mediaplayer-duration\");\n                        this._playButton = toolBarElement.find(\".k-play-button\");\n                        this._playButtonSpan = this._playButton.find(STATE_PLAY_SELECTOR);\n\n                        if (this.options.autoPlay) {\n                            this._playStateToggle(true);\n                        }\n\n                        if ( kendo.support.cssFlexbox === false ) {\n                            $([\n                                this._volumeButton[0],\n                                toolBarElement.find(\".k-mediaplayer-volume-wrap\")[0],\n                                toolBarElement.find(\".k-mediaplayer-quality-wrap\")[0],\n                                this._fullscreenButton[0]\n                            ]).wrapAll(\"<div class='k-align-right' />\");\n                        }\n                    }\n                },\n\n                _createDropDown: function() {\n                    var hdIcon = kendo.ui.icon(\"hd\");\n                    var dropDownElement = this.wrapper.find(DOT + VIDEO_QUALITY);\n                    var media = this.media();\n                    if (typeof dropDownElement.data(\"kendoDropDownList\") === \"undefined\") {\n                        this._dropDownSelectHandler = this._dropDownSelect.bind(this);\n                        this._dropDown = new ui.DropDownList(dropDownElement, {\n                            dataTextField: \"quality\",\n                            dataValueField: \"url\",\n                            popup: {\n                                position: \"bottom\",\n                                origin: \"top\",\n                                appendTo: this.wrapper\n                            },\n                            animation: {\n                                open: {\n                                    effects: \"slideIn:up\",\n                                    duration: 1\n                                }\n                            },\n                            select: this._dropDownSelectHandler\n                        });\n\n                        if (media && isArray(media.source)) {\n                            this._dropDown.setDataSource(media.source);\n                            this._dropDown.select(0);\n                        }\n\n                        this._dropDown.wrapper.addClass(\"k-button k-button-md k-rounded-md k-button-flat k-button-flat-base\");\n                        this._dropDown.wrapper.attr(\"title\", this.options.messages.quality).hide();\n                        this._dropDown.wrapper.find('span[class*=\"i-caret-alt-down\"]')\n                            .replaceWith(hdIcon);\n                        this._dropDown.list.addClass(\"k-quality-list\");\n                    }\n                },\n\n                _dropDownSelect: function(e) {\n                    if (this._currentIndex !== e.item.index()) {\n                        this._currentIndex = e.item.index();\n                        this._setPlayerUrl();\n                    }\n                },\n\n                _toolbarClick: function(e) {\n                    var target = $(e.target).children().first();\n                    var isPaused = target.is(STATE_PLAY_SELECTOR);\n\n                    if (!this.media()) {\n                        return;\n                    }\n\n                    if (target.is(STATE_PLAY_SELECTOR) || target.is(STATE_PAUSE_SELECTOR)) {\n                        if (isPaused) {\n                            this.play();\n                        }\n                        else {\n                            this.pause();\n                        }\n                    }\n\n                    if (target.is(FULLSCREEN_ENTER_SELECTOR) || target.is(FULLSCREEN_EXIT_SELECTOR)) {\n                        if (this._isInFullScreen) {\n                            kendo.ui.icon(target, { icon: FULLSCREEN_ENTER });\n                            this.fullScreen(false);\n                        } else {\n                            kendo.ui.icon(target, { icon: FULLSCREEN_EXIT });\n                            this.fullScreen(true);\n                        }\n                    }\n\n                    if (target.is(MUTE_SELECTOR) || target.is(LOW_VOLUME_SELECTOR) || target.is(HIGH_VOLUME_SELECTOR)) {\n                        var muted = this.mute();\n                        this.mute(!muted);\n                    }\n                },\n\n                _sliderDragging: function() {\n                    if (!this.media()) {\n                        return;\n                    }\n\n                    this._isDragging = true;\n                },\n\n                _sliderDragChange: function(e) {\n                    var that = this;\n                    var slider = e.sender;\n                    var tzOffset = timeZoneSec * 1000;\n\n                    if (!this.media()) {\n                        return;\n                    }\n\n                    that._sliderChangeFired = true;\n                    that._isDragging = false;\n\n                    if (!this.options.forwardSeek && slider.value() > this._seekBarLastPosition) {\n                        setTimeout(function() {\n                            slider.value(that._seekBarLastPosition);\n                        }, 1);\n                    } else if (this._youTubeVideo) {\n                        that._ytmedia.seekTo(that._timeToSec(e.value - tzOffset));\n                    } else {\n                        that._media.currentTime = that._timeToSec(e.value - tzOffset);\n                    }\n                    that.trigger(TIMECHANGE);\n                    that._preventPlay = true;\n                },\n\n                _changeVolumeButtonImage: function(volume) {\n                    var volumeButton = this._volumeButton;\n                    var volumeElement = volumeButton.find(\"span\");\n\n                    if (volume === 0) {\n                        kendo.ui.icon(volumeElement, { icon: MUTE });\n                        volumeButton.attr(\"title\", this.options.messages.unmute);\n                        volumeButton.attr(\"aria-label\", this.options.messages.unmute);\n                    } else if (volume > 0 && volume < 51) {\n                        kendo.ui.icon(volumeElement, { icon: LOW_VOLUME });\n                        volumeButton.attr(\"title\", this.options.messages.mute);\n                        volumeButton.attr(\"aria-label\", this.options.messages.mute);\n                    } else {\n                        kendo.ui.icon(volumeElement, { icon: HIGH_VOLUME });\n                        volumeButton.attr(\"title\", this.options.messages.mute);\n                        volumeButton.attr(\"aria-label\", this.options.messages.mute);\n                    }\n                },\n\n                _volumeDragging: function(e) {\n                    if (!this.media()) {\n                        return;\n                    }\n                    this.volume(e.value);\n                    this._changeVolumeButtonImage(e.value);\n                    this.trigger(VOLUMECHANGE);\n                },\n\n                _volumeChange: function(e) {\n                    if (!this.media()) {\n                        return;\n                    }\n                    this.volume(e.value);\n                    this._changeVolumeButtonImage(e.value);\n                    this.trigger(VOLUMECHANGE);\n                },\n\n                _mediaTimeUpdate: function() {\n                    var currentTime = (this._youTubeVideo) ? this._ytmedia.getCurrentTime() : this._media.currentTime;\n                    currentTime = currentTime ? currentTime : 0;\n                    var timeInMs = this._msToTime(currentTime);\n                    this._currentTimeElement.text(kendo.toString(timeInMs, this._timeFormat));\n                    if (!this._isDragging) {\n                        this._seekBarLastPosition = (currentTime + timeZoneSec) * 1000;\n                        this._slider.value(this._seekBarLastPosition);\n                    }\n\n                    return this.isPlaying();\n                },\n\n                _playStateToggle: function(play) {\n                    if (typeof play === \"undefined\") {\n                        play = this._playButtonSpan.is(STATE_PLAY_SELECTOR);\n                    }\n\n                    if (play) {\n                        kendo.ui.icon(this._playButtonSpan, { icon: STATE_PAUSE });\n                        this._playButton.attr(\"title\", this.options.messages.pause);\n                        this._playButton.attr(\"aria-label\", this.options.messages.pause);\n                    }\n                    else {\n                        kendo.ui.icon(this._playButtonSpan, { icon: STATE_PLAY });\n                        this._playButton.attr(\"title\", this.options.messages.play);\n                        this._playButton.attr(\"aria-label\", this.options.messages.play);\n                    }\n                },\n\n                _mediaEnded: function() {\n                    this._playStateToggle(false);\n                    this._currentTimeElement.text(kendo.toString(this._msToTime(0), this._timeFormat));\n                    this._slider.value((0 + timeZoneSec) * 1000);\n                    this.trigger(END);\n                },\n\n                _mediaPlay: function() {\n                    this.trigger(PLAY);\n                },\n\n                _mediaReady: function() {\n                    this.trigger(READY);\n                },\n\n                _mediaDurationChange: function() {\n                    var durationTime = this._msToTime((this._youTubeVideo) ? this._ytmedia.getDuration() : this._media.duration);\n\n                    this._timeFormat = durationTime.getHours() === 0 ? timeFormats.shortTime : timeFormats.longTime;\n\n                    this._durationElement.text(kendo.toString(durationTime, this._timeFormat));\n                    this._slider.setOptions({\n                        min: baseTime.getTime(),\n                        max: durationTime.getTime()\n                    });\n\n                    if (!this._isFirstRun) {\n                        this._resetTime();\n                        this._isFirstRun = true;\n                    }\n                },\n\n                _createYoutubePlayer: function() {\n                    this._mediaTimeUpdateHandler = this._mediaTimeUpdate.bind(this);\n                    this._mediaDurationChangeHandler = this._mediaDurationChange.bind(this);\n\n                    this.wrapper.prepend(templates.youtubePlayer);\n                    this._ytPlayer = this.wrapper.find(DOT + YTPLAYER)[0];\n                    $(this._ytPlayer)\n                        .css({\n                            width: this.wrapper.width(),\n                            height: this.wrapper.height()\n                        });\n\n                    if (!window.YT || !window.YT.Player) {\n                        if (!window.onYouTubeIframeAPIReadyRegister) {\n                            window.onYouTubeIframeAPIReadyRegister = [];\n                            $.getScript(\"https://www.youtube.com/iframe_api\");\n                            window.onYouTubeIframeAPIReady =\n                                function() {\n                                    if (window.onYouTubeIframeAPIReadyRegister) {\n                                        for (var i = 0; i < window.onYouTubeIframeAPIReadyRegister.length; i++) {\n                                            window.onYouTubeIframeAPIReadyRegister[i]._youtubeApiReady();\n                                        }\n                                    }\n                                    window.onYouTubeIframeAPIReadyRegister.length = 0;\n                                    window.onYouTubeIframeAPIReadyRegister = undefined$1;\n                                };\n                        }\n                        window.onYouTubeIframeAPIReadyRegister[window.onYouTubeIframeAPIReadyRegister.length] = this;\n                    }\n                    else {\n                        this._configurePlayer();\n                    }\n                },\n\n                _poll: function(name, callback, interval, context) {\n                    var that = this;\n\n                    if (that._timers[name] !== null) {\n                        clearTimeout(that._timers[name]);\n                    }\n\n                    that._timers[name] = setTimeout((function(context) {\n                        return function callLater() {\n                            if (callback.call(context)) {\n                                that._timers[name] = setTimeout(callLater, interval);\n                            }\n                        };\n                    })(context), interval);\n\n                    return that._timers[name];\n                },\n\n                _youtubeApiReady: function() {\n                    this._configurePlayer();\n                },\n\n                _configurePlayer: function() {\n                    var vars = {\n                        'autoplay': +this.options.autoPlay,\n                        'wmode': 'transparent',\n                        'controls': 0,\n                        'rel': 0,\n                        'showinfo': 0\n                    };\n\n                    this._onYouTubePlayerReady = this._onYouTubePlayerReady.bind(this);\n                    window.onYouTubePlayerReady = this._onYouTubePlayerReady;\n                    this._onPlayerStateChangeHandler = this._onPlayerStateChange.bind(this);\n                    window.onPlayerStateChange = this._onPlayerStateChange;\n\n\n                    var player = new window.YT.Player(this.wrapper.find(DOT + YTPLAYER)[0], {\n                        height: this.wrapper.height(),\n                        width: this.wrapper.width(),\n                        videoId: this._getMediaId(),\n                        playerVars: vars,\n                        events: {\n                            'onReady': this._onYouTubePlayerReady,\n                            'onStateChange': this._onPlayerStateChangeHandler\n                        }\n                    });\n                },\n\n                _onYouTubePlayerReady: function(event) {\n                    this._ytmedia = event.target;\n                    this._ytmedia.getIframe().style.width = \"100%\";\n                    this._ytmedia.getIframe().style.height = \"100%\";\n                    this._youTubeVideo = true;\n                    this._mediaDurationChangeHandler();\n\n                    if (this.options.autoPlay) {\n                        this._playStateToggle(true);\n                        this._ytmedia.loadVideoById(this._getMediaId());\n                    }\n                    else {\n                        this._ytmedia.cueVideoById(this._getMediaId());\n                    }\n\n                    if (this.options.mute) {\n                        this.mute(true);\n                    }\n\n                    this.trigger(READY);\n                },\n\n                _updateTitle: function() {\n                    this.titlebar().text(this.media().title || this.media().source);\n                },\n\n                _onPlayerStateChange: function(event) {\n\n                    if (event.data === 0) {\n                        this._slider.value(0);\n                        this._paused = false;\n                        this._playStateToggle(true);\n                        this.trigger(END);\n                        if (this.options.autoRepeat) {\n                            this.play();\n                        }\n                    }\n                    else if (event.data === 1) {\n                        this._mediaDurationChange();\n                        this._ytmedia.setVolume(this.volume());\n                        if (this._sliderChangeFired) {\n                            this._sliderChangeFired = false;\n                        } else {\n                            this._uiDisplay(false);\n                        }\n                        this.trigger(PLAY);\n                        this._playStateToggle(true);\n\n                        this._poll(\"progress\", this._mediaTimeUpdate, 500, this);\n                        this._paused = false;\n                    }\n                    else if (event.data === 2) {\n                        if (!this._paused) {\n                            this._uiDisplay(true);\n                            this._playStateToggle(false);\n                            this.trigger(PAUSE);\n                            this._paused = true;\n                        }\n                    }\n                },\n\n                _getMediaId: function() {\n                    var result = this._currentUrl();\n                    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#\\&\\?]*).*/;\n                    var match = result.match(regExp);\n\n                    if (match && match[7].length === 11) {\n                        result = match[7];\n                    }\n\n                    return result;\n                },\n\n                _mouseClick: function() {\n                    if (this.isPaused()) {\n                        this.play();\n                    } else {\n                        this.pause();\n                    }\n                },\n\n                _initializePlayer: function() {\n                    if (!this._mouseMoveHandler) {\n                        this._mouseMoveHandler = this._mouseMove.bind(this);\n                        this._mouseInHandler = this._mouseIn.bind(this);\n                        this._mouseOutHandler = this._mouseOut.bind(this);\n\n                        $(this.wrapper)\n                            .on(\"mouseenter\" + ns, this._mouseInHandler)\n                            .on(\"mouseleave\" + ns, this._mouseOutHandler)\n                            .on(\"mousemove\" + ns, this._mouseMoveHandler);\n                    }\n\n                    if (!this._ytmedia && this._youTubeVideo) {\n                        this._createYoutubePlayer();\n                    }\n                    else if (!this._media && !this._youTubeVideo) {\n                        this._createHtmlPlayer();\n                    }\n                },\n\n                _createHtmlPlayer: function() {\n                    if (!this._videoOverlay) {\n                        this._mouseClickHanlder = this._mouseClick.bind(this);\n                        this.wrapper.append(\"<div class='\" + OVERLAY + \"'></div>\");\n                        this._videoOverlay = this.wrapper.find(\".k-mediaplayer-overlay\")\n                            .on(\"click\" + ns, this._mouseClickHanlder);\n                    }\n\n                    this._mediaTimeUpdateHandler = this._mediaTimeUpdate.bind(this);\n                    this._mediaDurationChangeHandler = this._mediaDurationChange.bind(this);\n                    this._mediaEndedHandler = this._mediaEnded.bind(this);\n                    this._mediaCanPlayHandler = this._mediaReady.bind(this);\n                    this._mediaPlayHandler = this._mediaPlay.bind(this);\n                    this._videoOverlay.after(templates.htmlPlayer);\n                    this._media = this.wrapper.find(DOT + MEDIA)[0];\n                    $(this._media)\n                        .css({\n                            width: \"100%\",\n                            height: \"100%\"\n                        });\n\n                    if (this.options.mute) {\n                        this.mute(true);\n                    }\n\n                    this._media.ontimeupdate = this._mediaTimeUpdateHandler;\n                    this._media.ondurationchange = this._mediaDurationChangeHandler;\n                    this._media.oncanplay = this._mediaCanPlayHandler;\n                    this._media.onplay = this._mediaPlayHandler;\n                    this._media.onended = this._mediaEndedHandler;\n                    this._media.loop = this.options.autoRepeat;\n                },\n\n                _mouseIn: function() {\n                    this._uiDisplay(true);\n                },\n\n                _mouseOut: function() {\n                    this._poll(\"mouseIdle\", this._mouseIdle, 3000, this);\n                },\n\n                _mouseIdle: function() {\n                    this._uiDisplay(false);\n                    return false;\n                },\n\n                _mouseMove: function() {\n                    if (!(this._titleBar.is(':animated') || this._toolBar.element.is(':animated') || this._slider.wrapper.is(':animated'))) {\n                        this._uiDisplay(true);\n                    }\n                    this._poll(\"mouseIdle\", this._mouseIdle, 3000, this);\n                },\n\n                _uiDisplay: function(state) {\n                    var animationSpeed = 'slow';\n                    var uiElements = this._titleBar\n                        .add(this._toolBar.element.parent());\n\n                    if (state) {\n                        uiElements.fadeIn(animationSpeed);\n                    }\n                    else {\n                        uiElements.fadeOut(animationSpeed);\n                        if (this.options.navigatable) {\n                            this.wrapper.trigger(\"focus\");\n                        }\n                    }\n                },\n\n                setOptions: function(options) {\n                    Widget.fn.setOptions.call(this, options);\n                },\n\n                destroy: function() {\n                    Widget.fn.destroy.call(this);\n\n                    if (!this.isPaused()) {\n                        this.pause();\n                    }\n\n                    this.element.off(ns);\n                    this.element.find(DOT + OVERLAY).off(ns);\n                    this._timers = null;\n                    this._mouseMoveHandler = null;\n                    this._mouseOutHandler = null;\n                    this._mouseInHandler = null;\n                    this._mouseClickHanlder = null;\n                    this._keyDownHandler = null;\n                    this._fullscreenHandler = null;\n\n                    this._toolbarClickHandler = null;\n                    this._sliderDragChangeHandler = null;\n                    this._sliderDraggingHandler = null;\n                    this._volumeDraggingHandler = null;\n                    this._volumeChangeHandler = null;\n                    this._youtubeApiReadyHandler = null;\n                    this._onYouTubePlayerReady = null;\n                    this._onPlayerStateChangeHandler = null;\n                    this._dropDownSelectHandler = null;\n\n                    if (this._youTubeVideo) {\n                        this._ytmedia.destroy();\n                    }\n                    else {\n                        this._media.ontimeupdate = this._mediaTimeUpdateHandler = null;\n                        this._media.ondurationchange = this._mediaDurationChangeHandler = null;\n                        this._media.oncanplay = this._mediaCanPlayHandler = null;\n                        this._media.onplay = this._mediaPlayHandler = null;\n                        this._media.onended = this._mediaEndedHandler = null;\n                        this._media.src = \"\";\n                        this._media.remove();\n                    }\n\n                    this._mouseMoveTimer = null;\n                    clearTimeout(this._mouseMoveTimer);\n\n                    kendo.destroy(this.element);\n                },\n\n                seek: function(ms) {\n                    if (typeof ms === 'undefined') {\n                        return 1000 * (this._youTubeVideo) ? this._ytmedia.getCurrentTime() : (this._media ? this._media.currentTime : 0);\n                    }\n                    var seconds = ms / 1000;\n                    if (this._youTubeVideo) {\n                        if (seconds + 3 >= this._ytmedia.getDuration() | 0) {\n                            //avoid infinite bad request loop in youtube player.\n                            this._ytmedia.seekTo(this._ytmedia.getDuration() - 3 | 0, true);\n                        } else {\n                            this._ytmedia.seekTo(seconds, true);\n                        }\n                    } else {\n                        this._media.currentTime = seconds;\n                    }\n\n                    return this;\n                },\n\n                play: function() {\n                    if (this._youTubeVideo) {\n                        this._ytmedia.playVideo();\n                    } else {\n                        if (kendo.support.mobileOS) {\n                            this._uiDisplay(false);\n                        }\n                        this._media.play();\n                    }\n                    this._paused = false;\n\n                    this._playStateToggle(true);\n\n                    return this;\n                },\n\n                stop: function() {\n                    if (this._youTubeVideo && this._ytmedia) {\n                        this._ytmedia.stopVideo();\n                    } else if (this._media && !this._youTubeVideo) {\n                        if (kendo.support.mobileOS) {\n                            this._uiDisplay(true);\n                        }\n                        this._media.pause();\n                        this._media.currentTime = 0;\n                    }\n                    this._paused = true;\n\n                    this._playStateToggle(false);\n                    return this;\n                },\n\n                pause: function() {\n                    if (this._youTubeVideo) {\n                        this._ytmedia.pauseVideo();\n                    } else {\n                        if (kendo.support.mobileOS) {\n                            this._uiDisplay(true);\n                        }\n                        this._media.pause();\n                    }\n                    this._paused = true;\n                    this._playStateToggle(false);\n                    this.trigger(PAUSE);\n                    return this;\n                },\n\n                toolbar: function() {\n                    return this._toolBar;\n                },\n\n                dropdown: function() {\n                    return this._dropDown;\n                },\n\n                titlebar: function() {\n                    return this._titleBar;\n                },\n\n                fullScreen: function(enterFullScreen) {\n                    if (typeof enterFullScreen === 'undefined') {\n                        return this._isInFullScreen || false;\n                    }\n                    var element = this.element.get(0);\n                    if (enterFullScreen) {\n                        // Handles the case when the action is triggered by code and not by user iteraction\n                        this.element.addClass(\"k-mediaplayer-fullscreen\");\n                        if (element.requestFullscreen) {\n                            element.requestFullscreen();\n                        } else if (element.webkitRequestFullscreen) {\n                            element.webkitRequestFullscreen();\n                        } else if (element.mozRequestFullScreen) {\n                            element.mozRequestFullScreen();\n                        } else if (element.msRequestFullscreen) {\n                            element.msRequestFullscreen();\n                        }\n                        this._isInFullScreen = true;\n                    } else {\n\n                        if (document.cancelFullscreen) {\n                            document.cancelFullscreen();\n                        } else if (document.webkitCancelFullScreen) {\n                            document.webkitCancelFullScreen();\n                        } else if (document.mozCancelFullScreen) {\n                            document.mozCancelFullScreen();\n                        } else if (document.msCancelFullscreen) {\n                            document.msCancelFullscreen();\n                        } else if (document.exitFullscreen) {\n                            document.exitFullscreen();\n                        } else if (document.msExitFullscreen) {\n                            document.msExitFullscreen();\n                        }\n                        // Handles the case when the action is triggered by code and not by user iteraction\n                        this.element.removeClass(\"k-mediaplayer-fullscreen\");\n                        this._isInFullScreen = false;\n                    }\n                    this._slider.resize();\n                },\n\n                volume: function(value) {\n                    if (typeof value === 'undefined') {\n                        return (typeof this._volume !== 'undefined') ? this._volume : this._volume = this.options.volume;\n                    }\n                    this._volume = value;\n                    this.mute(value <= 0);\n\n                    if (this._youTubeVideo) {\n                        this._ytmedia.setVolume(this._volume);\n                    } else {\n                        this._media.volume = this._volume / 100;\n                    }\n\n                    this._volumeSlider.value(value);\n                },\n\n                mute: function(muted) {\n                    var currentState = this._youTubeVideo ? (this._ytmedia && this._ytmedia.isMuted()) : (this._media && this._media.muted);\n                    if (typeof muted === 'undefined' || muted === currentState) {\n                        return currentState;\n                    }\n                    if (this._youTubeVideo) {\n                        if (muted) {\n                            this._ytmedia.mute();\n                        }\n                        else {\n                            this._ytmedia.unMute();\n                        }\n                    }\n                    else {\n                        this._media.muted = muted;\n                    }\n\n                    if (muted) {\n                        this._volumeSlider.value(0);\n                    }\n                    else {\n                        this._volumeSlider.value((this._media && this._media.volume * 100) || (this._ytmedia && this._ytmedia.getVolume()));\n                    }\n                    this.trigger(VOLUMECHANGE);\n                    this._changeVolumeButtonImage(this._volumeSlider.value());\n                },\n\n                isEnded: function() {\n                    if (this._youTubeVideo) {\n                        return this._ytmedia.getPlayerState() === 0;\n                    } else {\n                        return this._media.ended;\n                    }\n                },\n\n                media: function(value) {\n                    var dropdown = this.dropdown();\n                    if (typeof value === 'undefined') {\n                        return (typeof this._mediaData !== 'undefined') ? this._mediaData : this._mediaData = this.options.media;\n                    }\n\n                    if (isArray(value.source)) {\n                        dropdown.setDataSource(value.source);\n                        dropdown.wrapper.show();\n                    }\n                    else {\n                        dropdown.wrapper.hide();\n                    }\n\n                    this._mediaData = value;\n\n                    this._updateTitle();\n\n                    this._setPlayerUrl();\n                },\n\n                isPaused: function() {\n                    return this._paused;\n                },\n\n                isPlaying: function() {\n                    return !this.isEnded() && !this._paused;\n                },\n\n                _aria: function() {\n                    this.wrapper.attr(\"role\", \"region\");\n                    //this.wrapper.attr(\"aria-labelledby\", \"mediaplayerTitleBar\");\n                    //add onfocus with aria active descendant\n                },\n\n                _navigatable: function() {\n                    this._fullscreenHandler = this._fullscreen.bind(this);\n                    $(document)\n                        .on(\"webkitfullscreenchange mozfullscreenchange fullscreenchange\" + ns, this._fullscreenHandler);\n\n                    if (this.options.navigatable) {\n                        this.wrapper.attr(\"tabIndex\", 0);\n                        this._keyDownHandler = this._keyDown.bind(this);\n                        this.wrapper\n                            .on(\"keydown\" + ns, this._keyDownHandler);\n                    }\n                },\n\n                _fullscreen: function() {\n                    var isFullScreen = document.fullScreen ||\n                        document.mozFullScreen ||\n                        document.webkitIsFullScreen,\n                        fullscreenSpan = this.wrapper.find(FULLSCREEN_ENTER_SELECTOR);\n\n                    this._uiDisplay(true);\n                    this._slider.resize();\n\n                    if (!isFullScreen) {\n                        kendo.ui.icon(fullscreenSpan, { icon: FULLSCREEN_ENTER });\n                        this.fullScreen(false);\n                    }\n                },\n\n                _keyDown: function(e) {\n                    e.preventDefault();\n                    var fsButton = this.wrapper.find(FULLSCREEN_ENTER_SELECTOR);\n\n                    if (e.keyCode === keys.SPACEBAR) {\n                        if (this.isPlaying()) {\n                            this.pause();\n                        }\n                        else {\n                            this.play();\n                        }\n                    }\n                    else if (e.keyCode === keys.ENTER && !this._isInFullScreen) {\n                        kendo.ui.icon(fsButton, { icon: FULLSCREEN_EXIT });\n                        this.fullScreen(true);\n                    }\n                    else if (e.keyCode === 77) {\n                        var muted = this.mute();\n                        this.mute(!muted);\n                    }\n                    else if (e.keyCode === keys.ESC && this._isInFullScreen) {\n                        kendo.ui.icon(fsButton, { icon: FULLSCREEN_ENTER });\n                        this.fullScreen(false);\n                    }\n                },\n\n                _error: function() {\n                },\n\n                _progress: function() {\n                }\n\n            });\n\n            ui.plugin(MediaPlayer);\n\n        })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}