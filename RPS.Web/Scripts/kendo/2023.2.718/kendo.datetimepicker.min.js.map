{"version":3,"file":"kendo.datetimepicker.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendodatetimepicker","js","this","$","undefined$1","kendo","window","TimeView","html","parse","parseDate","support","mediaQuery","activeElement","_activeElement","extractFormat","_extractFormat","calendar","isInRange","restrictValue","isEqualDatePart","getMilliseconds","ui","Widget","OPEN","CLOSE","CHANGE","ns","CLICK","UP","mouseAndTouchPresent","applyEventMap","slice","DISABLED","READONLY","FOCUSED","STATEDISABLED","MOUSEDOWN","MONTH","ARIA_ACTIVEDESCENDANT","ARIA_EXPANDED","ARIA_HIDDEN","ARIA_DISABLED","ARIA_READONLY","DATE","Date","MIN","MAX","dateViewParams","view","timeViewParams","extend","SINGLE_POPUP_TEMPLATE","ref","buttonSize","messages","renderButton","htmlEncode","date","size","time","set","themeColor","cancel","STATE_SELECTED","DateTimePicker","init","element","options","initialValue","that","componentType","fn","call","disableDates","disabled","min","attr","max","startTime","endTime","_specifiedRange","normalize","_initialOptions","_wrapper","bigScreenMQL","adaptiveMode","onChange","dateView","destroy","timeView","singlePopup","_popup","_views","smallScreenMQL","popup","isFunction","fullscreen","mediaQueryList","matches","list","addTranslate","_updateRanges","_icons","_reset","_template","setAttribute","e","type","addClass","role","_dateViewID","_timeViewID","autocomplete","_midnight","_calculateMidnight","is","parents","enable","readonly","value","val","parseFormats","culture","_createDateInput","_old","_update","_oldText","_applyCssClasses","label","_label","notify","name","format","timeFormat","dates","interval","height","footer","start","depth","animation","month","ARIATemplate","valueType","text","dateButtonText","timeButtonText","dateInput","weekNumber","hour","minute","second","millisecond","now","today","weekColumnHeader","fillMode","rounded","events","componentTypes","classic","modern","setOptions","currentValue","_value","_current","_dateIcon","off","remove","_timeIcon","_editable","_dateInput","toString","_updateARIA","_inputLabel","_unwrapFloating","dateIcon","timeIcon","wrapper","disable","removeClass","on","_toggleHover","length","removeAttribute","_keydown","bind","_change","current","getToday","close","preventDefault","toggle","_focusElement","labelOptions","isPlainObject","content","floatCheck","_hasDateInput","document","Label","widget","eventType","touch","match","trigger","floatingLabel","_form","_resetHandler","setTimeout","removeAttr","open","popupHovered","_calendar","ul","find","_hovered","_switchToTimeView","_switchToDateView","_option","visible","secondView","refresh","dateChanged","oldValue","valueUpdated","_typing","textFormatted","option","minDateEqual","maxDateEqual","timeViewOptions","maxSet","getTime","lastTimeOption","dataBind","currentTarget","toggleClass","rebind","old","skip","formattedValue","isSameType","String","grep","d","isDateViewVisible","stopPropagation","stopImmediatePropagation","altKey","keyCode","keys","DOWN","move","ENTER","_timeOption","arg","timeOption","dateRangeOption","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","div","msMin","timeDiv","omitPopup","id","dateDiv","DateView","anchor","change","_applyDateValue","_currentlySelected","setFullYear","setMonth","setDate","_toggleIcons","validateDate","_applyTimeValue","_timeSelected","_adjustListWidth","_updateTitle","active","_optionID","useValueToRender","specifiedRange","adjustedDate","msValue","msMax","setHours","_parse","icon","shape","insertAfter","hide","wrap","parent","style","cssText","css","className","formId","form","closest","disabledDate","optionsValue","defaultValue","_ariaTemplate","template","DateInput","_updateAria","appendTo","body","append","Popup","isRtl","activate","applyValue","sender","ActionSheet","adaptive","title","subtitle","closeButton","focusOnActivate","_groupChangeClick","_cancelClickHandler","_setClickHandler","index","eq","_updateCurrentlySelected","setMinutes","setSeconds","patterns","getCulture","calendars","standard","g","t","unshift","inArray","push","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","concat","plugin","jQuery"],"sources":["kendo.datetimepicker.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.datepicker.js'), require('kendo.timepicker.js'), require('kendo.html.button.js'), require('kendo.label.js'), require('kendo.actionsheet.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.datepicker', 'kendo.timepicker', 'kendo.html.button', 'kendo.label', 'kendo.actionsheet'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendodatetimepicker = global.kendodatetimepicker || {}, global.kendodatetimepicker.js = factory()));\n})(this, (function () {\n    var __meta__ = {\n        id: \"datetimepicker\",\n        name: \"DateTimePicker\",\n        category: \"web\",\n        description: \"The DateTimePicker allows the end user to select a value from a calendar or a time drop-down list.\",\n        depends: [ \"datepicker\", \"timepicker\", \"label\", \"actionsheet\" ]\n    };\n\n    (function($, undefined$1) {\n\n        var kendo = window.kendo,\n            TimeView = kendo.TimeView,\n            html = kendo.html,\n            parse = kendo.parseDate,\n            support = kendo.support,\n            mediaQuery = kendo.mediaQuery,\n            activeElement = kendo._activeElement,\n            extractFormat = kendo._extractFormat,\n            calendar = kendo.calendar,\n            isInRange = calendar.isInRange,\n            restrictValue = calendar.restrictValue,\n            isEqualDatePart = calendar.isEqualDatePart,\n            getMilliseconds = TimeView.getMilliseconds,\n            ui = kendo.ui,\n            Widget = ui.Widget,\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CHANGE = \"change\",\n            ns = \".kendoDateTimePicker\",\n            CLICK = \"click\" + ns,\n            UP = support.mouseAndTouchPresent ? kendo.applyEventMap(\"up\", ns.slice(1)) : CLICK,\n            DISABLED = \"disabled\",\n            READONLY = \"readonly\",\n            FOCUSED = \"k-focus\",\n            HOVER = \"k-hover\",\n            STATEDISABLED = \"k-disabled\",\n            HOVEREVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n            MOUSEDOWN = \"mousedown\" + ns,\n            MONTH = \"month\",\n            SPAN = \"<span/>\",\n            ARIA_ACTIVEDESCENDANT = \"aria-activedescendant\",\n            ARIA_EXPANDED = \"aria-expanded\",\n            ARIA_HIDDEN = \"aria-hidden\",\n            ARIA_DISABLED = \"aria-disabled\",\n            ARIA_READONLY = \"aria-readonly\",\n            DATE = Date,\n            MIN = new DATE(1800, 0, 1),\n            MAX = new DATE(2099, 11, 31),\n            dateViewParams = { view: \"date\" },\n            timeViewParams = { view: \"time\" },\n            extend = $.extend,\n            SINGLE_POPUP_TEMPLATE = function (ref) {\n                var buttonSize = ref.buttonSize;\n                var messages = ref.messages;\n\n                return '<div class=\"k-date-tab k-datetime-wrap\">' +\n                                        '<div class=\"k-datetime-buttongroup\">' +\n                                            '<div class=\"k-button-group k-button-group-stretched\">' +\n                                                kendo.html.renderButton((\"<button class=\\\"k-selected k-group-start\\\">\" + (kendo.htmlEncode(messages.date)) + \"</button>\"), {\n                                                    size: buttonSize\n                                                }) +\n                                                kendo.html.renderButton((\"<button class=\\\"k-group-end\\\">\" + (kendo.htmlEncode(messages.time)) + \"</button>\"), {\n                                                    size: buttonSize\n                                                }) +\n                                            '</div>' +\n                                        '</div>' +\n                                        '<div class=\"k-datetime-selector\">' +\n                                            '<div class=\"k-datetime-calendar-wrap\">' +\n                                            '</div>' +\n                                            '<div class=\"k-datetime-time-wrap\">' +\n                                            '</div>' +\n                                        '</div>' +\n                                        '<div class=\"k-datetime-footer k-actions-stretched k-actions\">' +\n                                            kendo.html.renderButton((\"<button class=\\\"k-time-accept\\\" title=\\\"Set\\\" aria-label=\\\"Set\\\">\" + (kendo.htmlEncode(messages.set)) + \"</button>\"), {\n                                                size: buttonSize,\n                                                themeColor: \"primary\"\n                                            }) +\n                                            kendo.html.renderButton((\"<button class=\\\"k-time-cancel\\\" title=\\\"Cancel\\\" aria-label=\\\"Cancel\\\">\" + (kendo.htmlEncode(messages.cancel)) + \"</button>\"), {\n                                                size: buttonSize\n                                            }) +\n                                        '</div>' +\n                                    '</div>';\n        },\n            STATE_SELECTED = \"k-selected\";\n\n        var DateTimePicker = Widget.extend({\n            init: function(element, options) {\n                var that = this, disabled, initialValue;\n\n                options = options || {};\n                options.componentType = options.componentType || \"classic\";\n                Widget.fn.init.call(that, element, options);\n\n                element = that.element;\n                options = that.options;\n\n                options.disableDates = kendo.calendar.disabled(options.disableDates);\n                options.min = parse(element.attr(\"min\")) || parse(options.min);\n                options.max = parse(element.attr(\"max\")) || parse(options.max);\n\n                if (+options.max != +MAX || +options.min != +MIN || +options.startTime != +MIN || options.endTime != +MAX) {\n                    this._specifiedRange = true;\n                }\n\n                normalize(options);\n\n                that._initialOptions = extend({}, options);\n\n                that._wrapper();\n\n                that.bigScreenMQL = mediaQuery(\"large\");\n                if (that.options.adaptiveMode == \"auto\") {\n                    that.bigScreenMQL.onChange(function() {\n                        if (that.dateView) {\n                            that.dateView.destroy();\n                        }\n\n                        if (that.timeView) {\n                            that.timeView.destroy();\n                        }\n\n                        if (options.singlePopup) {\n                            that._popup();\n                        }\n\n                        that._views();\n                    });\n                }\n\n                that.smallScreenMQL = mediaQuery(\"small\");\n                if (that.options.adaptiveMode == \"auto\") {\n                    that.smallScreenMQL.onChange(function() {\n                        if (that.popup && kendo.isFunction(that.popup.fullscreen)) {\n                            that.popup.fullscreen(that.smallScreenMQL.mediaQueryList.matches);\n                            if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                                that.timeView.addTranslate();\n                                that.timeView._updateRanges();\n                            }\n                        }\n                    });\n                }\n\n                if (options.singlePopup) {\n                    that._popup();\n                }\n\n                that._views();\n\n                that._icons();\n\n                that._reset();\n                that._template();\n\n                try {\n                    element[0].setAttribute(\"type\", \"text\");\n                } catch (e) {\n                    element[0].type = \"text\";\n                }\n\n                element.addClass(\"k-input-inner\")\n                       .attr({\n                           \"role\": \"combobox\",\n                           \"aria-expanded\": false,\n                           \"aria-haspopup\": \"dialog\",\n                           \"aria-controls\": that.dateView._dateViewID + \" \" + that.timeView._timeViewID,\n                           \"autocomplete\": \"off\"\n                       });\n\n\n                that._midnight = that._calculateMidnight(options.min, options.max);\n\n                disabled = element.is(\"[disabled]\") || $(that.element).parents(\"fieldset\").is(':disabled');\n                if (disabled) {\n                    that.enable(false);\n                } else {\n                    that.readonly(element.is(\"[readonly]\"));\n                }\n\n                initialValue = parse(options.value || that.element.val(), options.parseFormats, options.culture);\n\n                that._createDateInput(options);\n\n                that._old = that._update(initialValue || that.element.val());\n                that._oldText = element.val();\n                that._applyCssClasses();\n\n                if (options.label) {\n                    that._label();\n                }\n\n                kendo.notify(that);\n            },\n\n            options: {\n                name: \"DateTimePicker\",\n                value: null,\n                format: \"\",\n                timeFormat: \"\",\n                culture: \"\",\n                parseFormats: [],\n                dates: [],\n                disableDates: null,\n                startTime: null,\n                endTime: null,\n                min: new DATE(MIN),\n                max: new DATE(MAX),\n                interval: 30,\n                height: 200,\n                footer: \"\",\n                start: MONTH,\n                depth: MONTH,\n                animation: {},\n                month: {},\n                ARIATemplate: function (ref) {\n                    var valueType = ref.valueType;\n                    var text = ref.text;\n\n                    return (\"Current focused \" + valueType + \" is \" + text);\n        },\n                dateButtonText: \"Open the date view\",\n                timeButtonText: \"Open the time view\",\n                dateInput: false,\n                weekNumber: false,\n                messages: {\n                    set: \"Set\",\n                    cancel: \"Cancel\",\n                    hour: \"hour\",\n                    minute: \"minute\",\n                    second: \"second\",\n                    millisecond: \"millisecond\",\n                    now: \"Now\",\n                    date: \"Date\",\n                    time: \"Time\",\n                    today: \"Today\",\n                    weekColumnHeader: \"\"\n                },\n                adaptiveMode: \"none\",\n                componentType: \"classic\",\n                size: \"medium\",\n                fillMode: \"solid\",\n                rounded: \"medium\",\n                label: null\n            },\n\n            events: [\n                OPEN,\n                CLOSE,\n                CHANGE\n            ],\n\n            componentTypes: {\n                \"classic\": {\n                    singlePopup: false,\n                    timeView: {\n                        list: \"list\"\n                    }\n                },\n                \"modern\": {\n                    singlePopup: true,\n                    timeView: {\n                        list: \"scroll\"\n                    }\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this,\n                    value = that._value,\n                    min, max, currentValue;\n\n                Widget.fn.setOptions.call(that, options);\n\n                options = that.options;\n\n                options.min = min = parse(options.min);\n                options.max = max = parse(options.max);\n\n                normalize(options);\n\n                that._midnight = that._calculateMidnight(options.min, options.max);\n\n                currentValue = options.value || that._value || that.dateView._current;\n\n                if (min && !isEqualDatePart(min, currentValue)) {\n                    min = new DATE(MIN);\n                }\n\n                if (max && !isEqualDatePart(max, currentValue)) {\n                    max = new DATE(MAX);\n                }\n\n                that._dateIcon.off(ns);\n                that._dateIcon.remove();\n                that._timeIcon.off(ns);\n                that._timeIcon.remove();\n\n                that.dateView.setOptions(options);\n\n                that.timeView.setOptions(extend({}, options, {\n                    format: options.timeFormat,\n                    min: min,\n                    max: max\n                }));\n\n                that._icons();\n                that._editable(options);\n                that._createDateInput(options);\n\n                if (!that._dateInput) {\n                    that.element.val(kendo.toString(value, options.format, options.culture));\n                }\n\n                if (value) {\n                    that._updateARIA(value);\n                }\n\n                if (options.label && that._inputLabel) {\n                    that.label.setOptions(options.label);\n                } else if (options.label === false) {\n                    that.label._unwrapFloating();\n                    that._inputLabel.remove();\n                    delete that._inputLabel;\n                } else if (options.label) {\n                    that._label();\n                }\n            },\n\n            _editable: function(options) {\n                var that = this,\n                    element = that.element.off(ns),\n                    dateIcon = that._dateIcon.off(ns),\n                    timeIcon = that._timeIcon.off(ns),\n                    wrapper = that.wrapper.off(ns),\n                    readonly = options.readonly,\n                    disable = options.disable;\n\n                if (!readonly && !disable) {\n                    wrapper\n                        .removeClass(STATEDISABLED)\n                        .on(HOVEREVENTS, that._toggleHover);\n                    if (element && element.length) {\n                        element[0].removeAttribute(DISABLED);\n                        element[0].removeAttribute(READONLY, false);\n                        element[0].removeAttribute(ARIA_DISABLED, false);\n                        element[0].removeAttribute(ARIA_READONLY, false);\n                    }\n                    element.on(\"keydown\" + ns, that._keydown.bind(that))\n                           .on(\"focus\" + ns, function() {\n                               that.wrapper.addClass(FOCUSED);\n                           })\n                           .on(\"focusout\" + ns, function() {\n                               that.wrapper.removeClass(FOCUSED);\n                               if (element.val() !== that._oldText) {\n                                   that._change(element.val());\n                                   if (!element.val()) {\n                                       that.dateView.current(kendo.calendar.getToday());\n                                   }\n                               }\n                               if (that.options.singlePopup) {\n                                   return;\n                               }\n                               that.close(\"date\");\n                               that.close(\"time\");\n                           });\n\n                   dateIcon.on(MOUSEDOWN, preventDefault)\n                            .on(UP, function(e) {\n                                that.toggle(\"date\");\n                                that._focusElement(e.type);\n                            });\n\n                   timeIcon.on(MOUSEDOWN, preventDefault)\n                            .on(UP, function(e) {\n                                that.toggle(\"time\");\n                                that._focusElement(e.type);\n                            });\n\n                } else {\n                    wrapper\n                        .addClass(disable ? STATEDISABLED : \"\")\n                        .removeClass(disable ? \"\" : STATEDISABLED);\n\n                    element.attr(DISABLED, disable)\n                           .attr(READONLY, readonly)\n                           .attr(ARIA_DISABLED, disable)\n                           .attr(ARIA_READONLY, readonly);\n                }\n            },\n\n            _label: function() {\n                var that = this;\n                var options = that.options;\n                var labelOptions = $.isPlainObject(options.label) ? options.label : {\n                    content: options.label\n                };\n\n                if (that._dateInput) {\n                    labelOptions.floatCheck = function () {\n\n                        if (!that.value() && !that._dateInput._hasDateInput() && document.activeElement !== that.element[0]) {\n                            that.element.val(\"\");\n                            return true;\n                        }\n\n                        return false;\n                    };\n                }\n\n                that.label = new kendo.ui.Label(null, $.extend({}, labelOptions, {\n                    widget: that\n                }));\n\n                that._inputLabel = that.label.element;\n            },\n\n            _focusElement: function(eventType) {\n                var element = this.element;\n\n                if ((!support.touch || (support.mouseAndTouchPresent && !(eventType || \"\").match(/touch/i))) && element[0] !== activeElement()) {\n                    element.trigger(\"focus\");\n                }\n            },\n\n            readonly: function(readonly) {\n                this._editable({\n                    readonly: readonly === undefined$1 ? true : readonly,\n                    disable: false\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.readonly(readonly === undefined$1 ? true : readonly);\n                }\n            },\n\n            enable: function(enable) {\n                this._editable({\n                    readonly: false,\n                    disable: !(enable = enable === undefined$1 ? true : enable)\n                });\n\n                if (this.label && this.label.floatingLabel) {\n                    this.label.floatingLabel.enable(enable = enable === undefined$1 ? true : enable);\n                }\n            },\n\n            destroy: function() {\n                var that = this;\n\n                Widget.fn.destroy.call(that);\n                that.dateView.destroy();\n                that.timeView.destroy();\n\n                if (that.label) {\n                    that.label.destroy();\n                }\n\n                if (that.options.singlePopup) {\n                    that.popup.element.off(ns);\n                    that.popup.destroy();\n                }\n\n                that.element.off(ns);\n                that._dateIcon.off(ns);\n                that._timeIcon.off(ns);\n                that.wrapper.off(ns);\n\n                if (that._form) {\n                    that._form.off(\"reset\", that._resetHandler);\n                }\n\n                if (that.bigScreenMQL) {\n                    that.bigScreenMQL.destroy();\n                    that.bigScreenMQL = null;\n                }\n\n                if (that.smallScreenMQL) {\n                    that.smallScreenMQL.destroy();\n                    that.smallScreenMQL = null;\n                }\n            },\n\n            close: function(view) {\n                var that = this;\n\n                if (that.options.singlePopup) {\n                    that.popup.close();\n                } else {\n                    if (view !== \"time\") {\n                        view = \"date\";\n                    }\n\n                    that[view + \"View\"].close();\n                }\n\n                setTimeout(function() {\n                    that.element.removeAttr(\"aria-activedescendant\");\n                });\n            },\n\n            open: function(view) {\n                var that = this;\n                var popupHovered;\n\n                if (that.options.singlePopup) {\n\n                    that.dateView._calendar();\n\n                    if (that.timeView.ul.find(\"li\").length < 1) {\n                        that.timeView.bind();\n                    }\n\n                    // In some cases when the popup is opened resize is triggered which will cause it to close\n                    // Setting the below flag will prevent this from happening\n                    // Reference: https://github.com/telerik/kendo/pull/7553\n                    popupHovered = that.popup._hovered;\n                    that.popup._hovered = true;\n\n                    that.popup.open();\n\n                    if (view === \"time\") {\n                        that._switchToTimeView();\n                    } else {\n                        that._switchToDateView();\n                    }\n\n                    this._dateIcon.toggle(view !== \"time\");\n                    this._timeIcon.toggle(view === \"time\");\n\n                    setTimeout(function() {\n                        that.popup._hovered = popupHovered;\n                    }, 1);\n\n                } else {\n                    if (view !== \"time\") {\n                        view = \"date\";\n                    }\n\n                    this[view + \"View\"].open();\n                }\n            },\n\n            min: function(value) {\n                return this._option(\"min\", value);\n            },\n\n            max: function(value) {\n                return this._option(\"max\", value);\n            },\n\n            toggle: function(view) {\n                if (this.options.singlePopup) {\n                    if (this.popup.visible()) {\n                        this.close();\n                    } else {\n                        this.open(view);\n                    }\n                } else {\n                    var secondView = \"timeView\";\n\n                    if (view !== \"time\") {\n                        view = \"date\";\n                    } else {\n                        secondView = \"dateView\";\n                    }\n\n                    this[view + \"View\"].toggle();\n                    this[secondView].close();\n                }\n\n            },\n\n            value: function(value) {\n                var that = this;\n\n                if (value === undefined$1) {\n                    return that._value;\n                }\n\n                that._old = that._update(value);\n                if (that._old === null) {\n                    if (that._dateInput) {\n                        that._dateInput.value(that._old);\n                    } else {\n                        that.element.val(\"\");\n                    }\n                }\n\n                that._oldText = that.element.val();\n\n                if (that.label && that.label.floatingLabel) {\n                    that.label.floatingLabel.refresh();\n                }\n            },\n\n            _change: function(value) {\n                var that = this,\n                oldValue = that.element.val(),\n                dateChanged;\n\n                value = that._update(value);\n                dateChanged = +that._old != +value;\n\n                var valueUpdated = dateChanged && !that._typing;\n                var textFormatted = oldValue !== that.element.val();\n\n                if (valueUpdated || textFormatted) {\n                    that.element.trigger(CHANGE);\n                }\n\n                if (dateChanged) {\n                    that._old = value;\n                    that._oldText = that.element.val();\n\n                    that.trigger(CHANGE);\n                }\n\n                that._typing = false;\n            },\n\n            _option: function(option, value) {\n                var that = this;\n                var options = that.options;\n                var timeView = that.timeView;\n                var timeViewOptions = timeView.options;\n                var current = that._value || that._old;\n                var minDateEqual;\n                var maxDateEqual;\n\n                if (value === undefined$1) {\n                    return options[option];\n                }\n\n                value = parse(value, options.parseFormats, options.culture);\n                timeViewOptions.maxSet = false;\n\n                if (!value) {\n                    return;\n                }\n\n                if (options.min.getTime() === options.max.getTime()) {\n                    timeViewOptions.dates = [];\n                }\n\n                options[option] = new DATE(value.getTime());\n                that.dateView[option](value);\n\n                that._midnight = that._calculateMidnight(options.min, options.max);\n\n                if (current) {\n                    minDateEqual = isEqualDatePart(options.min, current);\n                    maxDateEqual = isEqualDatePart(options.max, current);\n                }\n\n                if (minDateEqual || maxDateEqual) {\n                    timeViewOptions[option] = value;\n\n                    if (minDateEqual && !maxDateEqual) {\n                        timeViewOptions.max = lastTimeOption(options.interval);\n                    }\n\n                    if (maxDateEqual) {\n                        if (that._midnight) {\n                            timeView.dataBind([MAX]);\n                            return;\n                        } else if (!minDateEqual) {\n                            timeViewOptions.min = MIN;\n                            timeViewOptions.maxSet = true;\n                        }\n                    }\n                } else {\n                    timeViewOptions.max = MAX;\n                    timeViewOptions.min = MIN;\n                }\n\n                timeView.bind();\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).toggleClass(HOVER, e.type === \"mouseenter\");\n            },\n\n            _update: function(value) {\n                var that = this,\n                    options = that.options,\n                    min = options.min,\n                    max = options.max,\n                    startTime = options.startTime,\n                    endTime = options.endTime,\n                    dates = options.dates,\n                    timeView = that.timeView,\n                    current = that._value,\n                    date = parse(value, options.parseFormats, options.culture),\n                    isSameType = (date === null && current === null) || (date instanceof Date && current instanceof Date),\n                    rebind, timeViewOptions, old, skip, formattedValue;\n\n                if (options.disableDates && options.disableDates(date)) {\n                    date = null;\n                    if (!that._old && !that.element.val()) {\n                        value = null;\n                    }\n                }\n\n                if (+date === +current && isSameType) {\n                    formattedValue = kendo.toString(date, options.format, options.culture);\n\n                    if (formattedValue !== value ) {\n                        that.element.val(date === null ? value : formattedValue);\n                        if (value instanceof String) {\n                            that.element.trigger(CHANGE);\n                        }\n                    }\n\n                    return date;\n                }\n\n                if (date !== null && isEqualDatePart(date, min)) {\n                    date = restrictValue(date, min, max);\n                } else if (!isInRange(date, min, max)) {\n                    date = null;\n                }\n\n                that._value = date;\n                timeView.value(date);\n                that.dateView.value(date);\n\n                if (date) {\n                    old = that._old;\n                    timeViewOptions = timeView.options;\n                    timeViewOptions.maxSet = false;\n\n                    if (dates[0]) {\n                        dates = $.grep(dates, function(d) { return isEqualDatePart(date, d); });\n\n                        if (dates[0]) {\n                            timeView.dataBind(dates);\n                            skip = true;\n                        }\n                    }\n\n                    if (!skip) {\n                        if (isEqualDatePart(date, min)) {\n                            timeViewOptions.min = startTime ? startTime : min;\n                            timeViewOptions.max = endTime ? endTime : lastTimeOption(options.interval);\n                            rebind = true;\n                        }\n\n                        if (isEqualDatePart(date, max)) {\n                            if (that._midnight) {\n                                timeView.dataBind([MAX]);\n                                skip = true;\n                            } else {\n                                timeViewOptions.max = endTime ? endTime : max;\n                                timeViewOptions.maxSet = true;\n                                if (!rebind) {\n                                    timeViewOptions.min = MIN;\n                                }\n                                rebind = true;\n                            }\n                        }\n                    }\n\n                    if (!skip && ((!old && rebind) || (old && !isEqualDatePart(old, date)))) {\n                        if (!rebind) {\n                            timeViewOptions.max = endTime ? endTime : MAX;\n                            timeViewOptions.min = startTime ? startTime : MIN;\n                        }\n\n                        timeView.bind();\n                    }\n                }\n                if (that._dateInput) {\n                    if (date) {\n                        that._dateInput.value(date);\n                    }\n                } else {\n                    that.element.val(kendo.toString(date || value, options.format, options.culture));\n                }\n                that._updateARIA(date);\n\n                return date;\n            },\n\n            _keydown: function(e) {\n                var that = this,\n                    dateView = that.dateView,\n                    timeView = that.timeView,\n                    value = that.element.val(),\n                    isDateViewVisible = that.options.singlePopup ? that.popup.visible() : dateView.popup.visible();\n\n                var stopPropagation = that._dateInput && e.stopImmediatePropagation;\n\n                if (e.altKey && e.keyCode === kendo.keys.DOWN) {\n                    that.toggle(isDateViewVisible ? \"time\" : \"date\");\n                } else if (isDateViewVisible) {\n                    dateView.move(e);\n                    that._updateARIA(dateView._current);\n\n                    if (e.keyCode === kendo.keys.ENTER) {\n                        that.toggle(\"time\");\n                    }\n                } else if (!that.options.singlePopup && timeView.popup.visible()) {\n                    timeView.move(e);\n                } else if (e.keyCode === kendo.keys.ENTER && value !== that._oldText) {\n                    that._change(value);\n                } else {\n                    that._typing = true;\n                    stopPropagation = false;\n                }\n                if (stopPropagation) {\n                    e.stopImmediatePropagation();\n                }\n            },\n\n            _timeOption: function(arg) {\n                var that = this,\n                options = that.options,\n                timeOption = options[arg],\n                dateRangeOption = arg == \"startTime\" ? options.min : options.max,\n                option = arg == \"startTime\" ? new DATE(MIN) : new DATE(MAX),\n                date;\n\n                if ( timeOption ) {\n                    option = new DATE(timeOption);\n                }\n\n                if (timeOption && dateRangeOption ) {\n                    date = new Date(dateRangeOption.getFullYear(), dateRangeOption.getMonth(), dateRangeOption.getDate(), timeOption.getHours(), timeOption.getMinutes(), timeOption.getSeconds());\n                    if (arg == \"startTime\" ) {\n                        that.options.min = date;\n                    } else {\n                        that.options.max = date;\n                    }\n                }\n\n                if ( options.componentType === \"modern\") {\n                    option = dateRangeOption;\n                }\n\n                return option;\n            },\n\n            _views: function() {\n                var that = this,\n                    element = that.element,\n                    options = that.options,\n                    id = element.attr(\"id\"),\n                    dateView, timeView,\n                    div, ul, msMin,\n                    date,\n                    timeDiv,\n                    omitPopup,\n                    timeViewOptions;\n\n                if (options.singlePopup) {\n                    options.dateDiv = that.popup.element.find(\".k-datetime-calendar-wrap\");\n                    timeDiv = that.popup.element.find(\".k-datetime-time-wrap\");\n                    options.omitPopup = omitPopup = true;\n                    timeViewOptions = options.timeView;\n                }\n\n                that.dateView = dateView = new kendo.DateView(extend({}, options, {\n                    id: id,\n                    anchor: that.wrapper,\n                    change: function() {\n                        var value = that._applyDateValue();\n\n                        if (options.singlePopup) {\n                            if (!that.timeView._currentlySelected) {\n                                that.timeView._currentlySelected = new Date();\n                            }\n                            that.timeView._currentlySelected.setFullYear(value.getFullYear());\n                            that.timeView._currentlySelected.setMonth(value.getMonth());\n                            that.timeView._currentlySelected.setDate(value.getDate());\n                            that._switchToTimeView();\n                            that._toggleIcons(\"time\");\n                        } else {\n                            that._change(value);\n                            that.close(\"date\");\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            element.attr(ARIA_EXPANDED, false);\n                            div.attr(ARIA_HIDDEN, true);\n                        }\n                    },\n                    open: function(e) {\n                        if (that.trigger(OPEN, dateViewParams)) {\n                            e.preventDefault();\n                        } else {\n\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n\n                                that.dateView[date ? \"current\" : \"value\"](date);\n                            }\n\n                            div.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true);\n\n                            that._updateARIA(date);\n                        }\n                    }\n                }));\n                div = dateView.div;\n\n                msMin = options.min.getTime();\n                that.timeView = timeView = new TimeView({\n                    id: id,\n                    adaptiveMode: options.adaptiveMode,\n                    value: options.value,\n                    size: options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches ? options.size : \"large\",\n                    anchor: that.wrapper,\n                    animation: options.animation,\n                    format: options.timeFormat,\n                    culture: options.culture,\n                    height: options.componentType === \"modern\" ? null : options.height,\n                    interval: options.interval,\n                    startTime: options.startTime,\n                    endTime: options.endTime,\n                    min: that._timeOption(\"startTime\"),\n                    max: that._timeOption(\"endTime\"),\n                    dates: msMin === options.max.getTime() ? [new Date(msMin)] : [],\n                    parseFormats: options.parseFormats,\n                    validateDate: (options.startTime || options.endTime ) ? false : true,\n                    change: function(value, trigger) {\n                        value = that._applyTimeValue(value);\n\n                        if (trigger) {\n                            that._timeSelected = true;\n                            that._change(value);\n                        } else {\n                            element.val(kendo.toString(value, options.format, options.culture));\n                            dateView.value(value);\n                            that._updateARIA(value);\n                        }\n                    },\n                    close: function(e) {\n                        if (that.trigger(CLOSE, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            ul.attr(ARIA_HIDDEN, true);\n                            element.attr(ARIA_EXPANDED, false);\n                        }\n                    },\n                    open: function(e) {\n                        if (that.options.componentType !== \"modern\") {\n                            timeView._adjustListWidth();\n                        } else {\n                            that.timeView._updateTitle();\n                        }\n\n                        if (that.trigger(OPEN, timeViewParams)) {\n                            e.preventDefault();\n                        } else {\n                            if (element.val() !== that._oldText) {\n                                date = parse(element.val(), options.parseFormats, options.culture);\n\n                                that.timeView.value(date);\n                            }\n\n                            ul.attr(ARIA_HIDDEN, false);\n                            element.attr(ARIA_EXPANDED, true);\n\n                            timeView.options.active(timeView.current());\n                        }\n                    },\n                    active: function(current) {\n                        if (element && element.length) {\n                            element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                        }\n                        if (current) {\n                            element.attr(ARIA_ACTIVEDESCENDANT, timeView._optionID);\n                        }\n                    },\n                    popup: options.popup,\n                    useValueToRender: true,\n                    specifiedRange: that._specifiedRange,\n                    omitPopup: omitPopup,\n                    timeDiv: timeDiv,\n                    timeView: timeViewOptions,\n                    messages: that.options.messages\n                });\n                ul = timeView.ul;\n            },\n\n            _applyDateValue: function() {\n                var that = this;\n                var options = that.options;\n                var dateView = that.dateView;\n                var value = dateView.calendar.value();\n                var msValue = +value;\n                var msMin = +options.min;\n                var msMax = +options.max;\n                var current, adjustedDate;\n\n                if (msValue === msMin || msValue === msMax) {\n                    current = msValue === msMin ? msMin : msMax;\n                    current = new DATE(that._value || current);\n                    current.setFullYear(value.getFullYear(), value.getMonth(), value.getDate());\n\n                    if (isInRange(current, msMin, msMax)) {\n                        value = current;\n                    }\n                }\n\n                if (that._value) {\n\n                    adjustedDate = kendo.date.setHours(new Date(value), that._value);\n\n                    if (isInRange(adjustedDate, msMin, msMax)) {\n                        value = adjustedDate;\n                    }\n                }\n\n                return value;\n            },\n\n            _applyTimeValue: function(value) {\n                var timeView = this.timeView;\n                var options = this.options;\n\n                value = timeView._parse(value);\n\n                if (value < options.min) {\n                    value = new DATE(+options.min);\n                    timeView.options.min = value;\n                } else if (value > options.max) {\n                    value = new DATE(+options.max);\n                    timeView.options.max = value;\n                }\n\n                return value;\n            },\n\n            _icons: function() {\n                var that = this;\n                var element = that.element;\n                var options = that.options;\n                var icons;\n\n                icons = that.wrapper.find(\"button.k-input-button\");\n\n                if (!icons[0]) {\n                    that._dateIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"' + options.dateButtonText + '\"></button>', {\n                        icon: \"calendar\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(element);\n                    that._timeIcon = $(html.renderButton('<button unselectable=\"on\" tabindex=\"-1\" class=\"k-input-button\" aria-label=\"' + options.timeButtonText + '\"></button>', {\n                        icon: \"clock\",\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        shape: \"none\",\n                        rounded: \"none\"\n                    })).insertAfter(that._dateIcon);\n                }\n\n                if (options.singlePopup) {\n                    that._timeIcon.hide();\n                }\n            },\n\n            _wrapper: function() {\n                var that = this,\n                element = that.element,\n                wrapper;\n\n                wrapper = element.parents(\".k-datetimepicker\");\n\n                if (!wrapper[0]) {\n                    wrapper = element.wrap(SPAN).parent();\n                }\n\n                wrapper[0].style.cssText = element[0].style.cssText;\n                element.css({\n                    height: element[0].style.height\n                });\n\n                that.wrapper = wrapper.addClass(\"k-datetimepicker k-input\")\n                    .addClass(element[0].className).removeClass('input-validation-error');\n            },\n\n            _reset: function() {\n                var that = this,\n                    element = that.element,\n                    formId = element.attr(\"form\"),\n                    form = formId ? $(\"#\" + formId) : element.closest(\"form\"),\n                    options = that.options,\n                    disabledDate = options.disableDates,\n                    parseFormats = options.parseFormats.length ? options.parseFormats : null,\n                    optionsValue = that._initialOptions.value,\n                    initialValue = element[0].defaultValue;\n\n                if (optionsValue && (disabledDate && disabledDate(optionsValue))) {\n                    optionsValue = null;\n                }\n\n                if ((!initialValue || !kendo.parseDate(initialValue, parseFormats, options.culture)) && optionsValue) {\n                    element.attr(\"value\", kendo.toString(optionsValue, options.format, options.culture));\n                }\n\n                if (form[0]) {\n                    that._resetHandler = function() {\n                        that.value(optionsValue || element[0].defaultValue);\n                        that.max(that._initialOptions.max);\n                        that.min(that._initialOptions.min);\n                    };\n\n                    that._form = form.on(\"reset\", that._resetHandler);\n                }\n            },\n\n            _template: function() {\n                this._ariaTemplate = kendo.template(this.options.ARIATemplate).bind(this);\n            },\n\n            _createDateInput: function(options) {\n                if (this._dateInput) {\n                    this._dateInput.destroy();\n                    this._dateInput = null;\n                }\n\n                if (options.dateInput ) {\n                    this._dateInput = new ui.DateInput(this.element, {\n                        culture: options.culture,\n                        format: options.format,\n                        size: options.size,\n                        fillMode: options.fillMode,\n                        rounded: options.rounded,\n                        min: options.min,\n                        max: options.max,\n                        interval: options.interval,\n                        messages: options.messages.dateInput\n                    });\n                }\n            },\n\n            _calculateMidnight: function(min, max) {\n                return getMilliseconds(min) + getMilliseconds(max) === 0;\n            },\n\n            _updateARIA: function(date) {\n                var that = this;\n                var calendar = that.dateView.calendar;\n\n                if (that.element && that.element.length) {\n                    that.element[0].removeAttribute(ARIA_ACTIVEDESCENDANT);\n                }\n\n                if (calendar) {\n                    that.element.attr(ARIA_ACTIVEDESCENDANT, calendar._updateAria(that._ariaTemplate, date));\n                }\n            },\n            _popup: function() {\n                var that = this;\n                var options = that.options;\n                var div = $(\"<div></div>\").attr(ARIA_HIDDEN, \"true\")\n                    .addClass(\"k-datetime-container k-group k-reset\")\n                    .appendTo(document.body);\n\n                div.append(kendo.template(SINGLE_POPUP_TEMPLATE)(extend({}, that.options, {\n                    buttonSize: options.adaptiveMode != \"auto\" || that.bigScreenMQL.mediaQueryList.matches ? options.size : \"large\"\n                })));\n\n                if (that.popup) {\n                    that.popup.destroy();\n                    that.popup.element.remove();\n                    that.popup = null;\n                }\n\n                if (that.options.adaptiveMode == \"auto\" && !that.bigScreenMQL.mediaQueryList.matches) {\n                    that.popup = new ui.ActionSheet(div, {\n                        adaptive: true,\n                        title: \"Select Date and Time\",\n                        subtitle: \"DD / MM / YY - 00:00:00\",\n                        closeButton: true,\n                        focusOnActivate: false,\n                        fullscreen: that.smallScreenMQL.mediaQueryList.matches,\n                        popup: extend(options.popup, options, {\n                            name: \"Popup\",\n                            isRtl: kendo.support.isRtl(that.wrapper),\n                            anchor: that.wrapper,\n                            activate: function() {\n                                if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                                    that.timeView.addTranslate();\n                                    that.timeView.applyValue(that._value);\n                                    that.timeView._updateRanges();\n                                }\n                            },\n                            open: function(e) {\n                                if (that.trigger(OPEN, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                                    e.preventDefault();\n                                } else {\n                                    this.element.attr(ARIA_HIDDEN, false);\n                                    that.element.attr(ARIA_EXPANDED, true);\n                                }\n\n                                that.timeView._updateTitle();\n                            },\n                            close: function(e) {\n                                if (that.trigger(CLOSE, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                                    e.preventDefault();\n                                } else {\n                                    that.element.attr(ARIA_EXPANDED, false);\n                                    this.element.attr(ARIA_HIDDEN, true);\n                                }\n                            }\n                        })\n                    });\n                } else {\n                    that.popup = new ui.Popup(div, extend(options.popup, options, {\n                        name: \"Popup\",\n                        isRtl: kendo.support.isRtl(that.wrapper),\n                        anchor: that.wrapper,\n                        activate: function() {\n                            if (that.options.timeView && that.options.timeView.list === \"scroll\") {\n                                that.timeView.addTranslate();\n                                that.timeView.applyValue(that._value);\n                                that.timeView._updateRanges();\n                            }\n                        },\n                        open: function(e) {\n                            if (that.trigger(OPEN, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                                e.preventDefault();\n                            } else {\n                                this.element.attr(ARIA_HIDDEN, false);\n                                that.element.attr(ARIA_EXPANDED, true);\n                            }\n\n                            that.timeView._updateTitle();\n                        },\n                        close: function(e) {\n                            if (that.trigger(CLOSE, { view: this.element.find('.k-date-tab').length ? 'date' : 'time', sender: that })) {\n                                e.preventDefault();\n                            } else {\n                                that.element.attr(ARIA_EXPANDED, false);\n                                this.element.attr(ARIA_HIDDEN, true);\n                            }\n                        }\n                    }));\n                }\n\n                div.on(CLICK + ns, \".k-datetime-buttongroup .k-button\", that._groupChangeClick.bind(that));\n                div.on(CLICK + ns, \".k-datetime-footer button.k-time-cancel\", that._cancelClickHandler.bind(that));\n                div.on(CLICK + ns, \".k-datetime-footer button.k-time-accept\", that._setClickHandler.bind(that));\n            },\n\n            _groupChangeClick: function(e) {\n                preventDefault(e);\n                var button = $(e.currentTarget);\n                var index = button.index();\n\n                if (index) {\n                    this._switchToTimeView();\n                    this._toggleIcons(\"time\");\n                } else {\n                    this._switchToDateView();\n                    this._toggleIcons(\"date\");\n                }\n            },\n\n            _switchToDateView: function() {\n                this.popup.element.find(\".k-group-start, .k-group-end\").removeClass(STATE_SELECTED).eq(0).addClass(STATE_SELECTED);\n                this.popup.element.find(\".k-datetime-wrap\").removeClass(\"k-time-tab\").addClass(\"k-date-tab\");\n            },\n\n            _switchToTimeView: function() {\n                this.timeView.addTranslate();\n                this.timeView.applyValue(this._value);\n                this.timeView._updateRanges();\n                this.popup.element.find(\".k-group-start, .k-group-end\").removeClass(STATE_SELECTED).eq(1).addClass(STATE_SELECTED);\n                this.popup.element.find(\".k-datetime-wrap\").removeClass(\"k-date-tab\").addClass(\"k-time-tab\");\n            },\n\n            _toggleIcons: function(view) {\n                if (!view) {\n                    this._dateIcon.toggle();\n                    this._timeIcon.toggle();\n                    return;\n                }\n\n                this._dateIcon.toggle(view !== \"time\");\n                this._timeIcon.toggle(view === \"time\");\n            },\n\n            _cancelClickHandler: function(e) {\n                preventDefault(e);\n                if (this._value) {\n                    this.value(this._value);\n                    this.dateView.value(this._value);\n                }\n                this.popup.close();\n            },\n\n            _setClickHandler: function(e) {\n                preventDefault(e);\n                var value = this._applyDateValue();\n                var time;\n\n                value = value || new Date();\n                time = this.timeView._currentlySelected || value;\n                this.timeView._updateCurrentlySelected();\n                value.setHours(time.getHours());\n                value.setMinutes(time.getMinutes());\n                value.setSeconds(time.getSeconds());\n                value = this._applyTimeValue(value);\n\n                this._change(value);\n                this.popup.close();\n            }\n        });\n\n        function lastTimeOption(interval) {\n            var date = new Date(2100, 0, 1);\n            date.setMinutes(-interval);\n            return date;\n        }\n\n        function preventDefault(e) {\n            e.preventDefault();\n        }\n\n        function normalize(options) {\n            var patterns = kendo.getCulture(options.culture).calendars.standard.patterns,\n                parseFormats = !options.parseFormats.length,\n                timeFormat;\n\n            options.format = extractFormat(options.format || patterns.g);\n            options.timeFormat = timeFormat = extractFormat(options.timeFormat || patterns.t);\n            kendo.DateView.normalize(options);\n\n            if (parseFormats) {\n               options.parseFormats.unshift(\"yyyy-MM-ddTHH:mm:ss\");\n            }\n\n            if ($.inArray(timeFormat, options.parseFormats) === -1) {\n                options.parseFormats.push(timeFormat);\n            }\n        }\n\n        kendo.cssProperties.registerPrefix(\"DateTimePicker\", \"k-input-\");\n\n        kendo.cssProperties.registerValues(\"DateTimePicker\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(DateTimePicker);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}