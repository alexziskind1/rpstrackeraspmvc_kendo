{"version":3,"file":"kendo.pivot.configurator.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendopivot","configurator","js","this","Navigation","options","tabIndex","root","eventHandlers","update","prototypeAccessors","elements","configurable","first","last","current","get","Array","from","querySelectorAll","selectors","join","querySelector","all","length","find","el","matches","prototype","start","this$1$1","loop","eventType","mouseEvents","ev","target","Element","closest","call","undefined","addEventListener","eventType$1","keyboardEvents","key","stop","removeEventListener","focusElement","element","previous","removeAttribute","classList","remove","setAttribute","String","focus","preventScroll","Object","defineProperties","scrollableValuesSel","scrollableColumnHeaderSel","scrollableRowHeaderSel","emptyCellSel","tableSel","cellSel","navigate","nav","dir","preventDefault","index","indexOf","onDelete","HTMLElement","keydown","Tab","shiftKey","Escape","_target","pivot","previousElementSibling","confButton","nextElementSibling","pivotCell","c","click","Delete","Backspace","prev","hasAttribute","ConfiguratorNavigation","apply","arguments","__proto__","create","constructor","$","undefined$1","kendo","window","ui","encode","htmlEncode","Widget","common","pivotgrid","fetchDiscover","configuratorReducer","PIVOT_CONFIGURATOR_ACTION","ns","SETTING_CONTAINER_TEMPLATE","ref","name","addKPI","data","found","idx","type","splice","caption","defaultHierarchy","uniqueName","kpiNode","node","normalizeKPIs","settingTargetFromNode","PivotConfiguratorV2","extend","init","fn","_ariaId","attr","guid","addClass","role","_dataSource","navigatable","_initPivotGridConfiguratorNavigation","_layout","refresh","height","notify","events","orientation","filterable","sortable","messages","title","cancelButtonText","applyButtonText","measures","columns","rows","setDataSource","dataSource","that","configuratorNavigation","firstCell","_refreshHandler","unbind","_errorHandler","_progressHandler","_error","bind","_requestStart","PivotDataSourceV2","horizontal","panel","append","headerTextId","appendTo","formClass","ariaId","CONTENT_TEMPLATE","each","elm","html","renderChipList","_fields","cancelText","applyText","ACTIONS_TEMPLATE","_targets","on","_actions","e","currentTarget","_applyState","read","_cancelChanges","treeView","targetItemTemplate","menuenabled","chip","renderChip","TARGET_ITEM_TEMPLATE","fillMode","themeColor","rounded","removable","removeIcon","actions","icon","_createTarget","template","connectWith","empty","setting","forEach","x","PivotSettingTargetV2","hint","clone","item","wrapper","id","dataItem","getByUid","checked","container","kendoTreeView","checkboxes","checkChildren","result","hasChildren","aggregator","local","uid","dataTextField","autoBind","check","sender","action","toggleSelection","payload","state","columnAxes","_state","rowAxes","measureAxes","cubeSchema","restoreMeasure","items","_checkMembers","trigger","_redraw","_treeViewDataSource","off","_clickHandler","HierarchicalDataSource","schema","model","transport","fields","dsMeasures","catalog","cube","fetchOptions","url","members","concat","isEmptyObject","dimensions","success","connection","restrictions","catalogName","cubeName","command","then","newFields","_getKPIOptions","buildKPImeasures","_loadFieldsCommand","newData","hash","field","dimensionUniqueName","hierarchyUniqueName","_progress","toggle","progress","destroy","fetch","plugin","PivotConfigurator","outerHeight","measuresLabel","columnsLabel","rowsLabel","fieldsLabel","PivotDataSource","kpi","schemaDimensions","done","cubeBuilder","fail","error","schemaKPIs","schemaMeasures","schemaLevels","schemaHierarchies","form","dragAndDrop","dragstart","sourceNode","measure","drag","status","dropTarget","validate","setStatusClass","drop","push","add","sortIcon","getIcons","PivotSettingTarget","emptyTemplate","columnsContainer","rowsContainer","measuresContainer","fieldMenu","_toggleHover","toggleClass","_resize","_cube","_catalog","kpiMeasure","value","goal","trend","cssProperties","registerPrefix","registerValues","prop","values","roundedValues","jQuery"],"sources":["kendo.pivot.configurator.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.dom.js'), require('kendo.html.chip.js'), require('kendo.html.chiplist.js'), require('kendo.pivot.common.js'), require('kendo.icons.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.dom', 'kendo.html.chip', 'kendo.html.chiplist', 'kendo.pivot.common', 'kendo.icons'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendopivot = global.kendopivot || {}, global.kendopivot.configurator = global.kendopivot.configurator || {}, global.kendopivot.configurator.js = factory()));\n})(this, (function () {\n    var Navigation = function Navigation(options) {\n        this.tabIndex = 0;\n        this.root = null;\n        this.eventHandlers = {};\n        this.update = function () { };\n        this.tabIndex = options.tabIndex;\n    };\n\n    var prototypeAccessors = { elements: { configurable: true },first: { configurable: true },last: { configurable: true },current: { configurable: true } };\n    prototypeAccessors.elements.get = function () {\n        return this.root ? Array.from(this.root.querySelectorAll(this.selectors.join(','))) : [];\n    };\n    prototypeAccessors.first.get = function () {\n        return (this.root && this.root.querySelector(this.selectors.join(','))) || null;\n    };\n    prototypeAccessors.last.get = function () {\n        var all = this.elements;\n        return all[all.length - 1] || null;\n    };\n    prototypeAccessors.current.get = function () {\n        return this.elements.find(function (el) { return el.matches(':focus'); });\n    };\n    Navigation.prototype.start = function start (root) {\n            var this$1$1 = this;\n\n        this.root = root;\n        var loop = function ( eventType ) {\n            if (this$1$1.mouseEvents[eventType]) {\n                this$1$1.eventHandlers[eventType] = (function (ev) {\n                    var target = ev.target instanceof Element && ev.target.closest(this$1$1.selectors.join(','));\n                    if (target) {\n                        this$1$1.mouseEvents[eventType].call(undefined, target, this$1$1, ev);\n                    }\n                });\n                root.addEventListener(eventType, this$1$1.eventHandlers[eventType]);\n            }\n        };\n\n            for (var eventType in this$1$1.mouseEvents) loop( eventType );\n        var loop$1 = function ( eventType ) {\n            if (this$1$1.keyboardEvents[eventType$1]) {\n                this$1$1.eventHandlers[eventType$1] = (function (ev) {\n                    var target = ev.target instanceof Element && ev.target.closest(this$1$1.selectors.join(','));\n                    var key = ev.key === ' ' ? 'Space' : ev.key;\n                    if (target && this$1$1.keyboardEvents[eventType$1][key]) {\n                        this$1$1.keyboardEvents[eventType$1][key].call(undefined, target, this$1$1, ev);\n                    }\n                });\n                root.addEventListener(eventType$1, this$1$1.eventHandlers[eventType$1]);\n            }\n        };\n\n            for (var eventType$1 in this$1$1.keyboardEvents) loop$1( eventType );\n    };\n    Navigation.prototype.stop = function stop () {\n        if (this.root) {\n            for (var eventType in this.eventHandlers) {\n                if (this.eventHandlers[eventType]) {\n                    this.root.removeEventListener(eventType, this.eventHandlers[eventType]);\n                }\n            }\n        }\n        this.root = null;\n    };\n    Navigation.prototype.focusElement = function focusElement (element, previous) {\n        if (element) {\n            if (previous) {\n                previous.removeAttribute('tabindex');\n                previous.classList.remove('k-focus');\n            }\n            element.setAttribute('tabindex', String(this.tabIndex));\n            element.focus({ preventScroll: true });\n        }\n    };\n\n    Object.defineProperties( Navigation.prototype, prototypeAccessors );\n\n    var scrollableValuesSel = '.k-pivotgrid .k-pivotgrid-values';\n    var scrollableColumnHeaderSel = '.k-pivotgrid .k-pivotgrid-column-headers';\n    var scrollableRowHeaderSel = '.k-pivotgrid .k-pivotgrid-row-headers';\n    var emptyCellSel = '.k-pivotgrid > .k-pivotgrid-empty-cell';\n    var tableSel = 'table.k-pivotgrid-table';\n    var cellSel = '.k-pivotgrid-cell';\n    var scrollables = [scrollableValuesSel, scrollableColumnHeaderSel, scrollableRowHeaderSel].join(',');\n    var selectors$1 = [\n        emptyCellSel,\n        [scrollableColumnHeaderSel, tableSel, cellSel].join(' '),\n        [scrollableRowHeaderSel, tableSel, cellSel].join(' '),\n        [scrollableValuesSel, tableSel, cellSel].join(' ')\n    ];\n    var onEnter = function (target, nav, ev) {\n        var icon = target.querySelector('.k-icon, .k-svg-icon');\n        if (icon) {\n            var index = nav.elements.indexOf(target);\n            nav.update = function () {\n                nav.focusElement(nav.elements[index], null);\n                nav.update = function () { };\n            };\n            icon.click();\n            ev.preventDefault();\n        }\n    };\n    var tryScrollLeft = function (target, scrollable, elToScroll) {\n        if (target.offsetLeft < scrollable.scrollLeft) {\n            elToScroll.scrollLeft = target.offsetLeft;\n        }\n    };\n    var tryScrollRight = function (target, scrollable, elToScroll) {\n        if (target.offsetLeft + target.offsetWidth > scrollable.scrollLeft + scrollable.offsetWidth &&\n            target.offsetWidth < scrollable.offsetWidth) {\n            elToScroll.scrollLeft = target.offsetLeft + target.offsetWidth - scrollable.offsetWidth;\n        }\n    };\n    var tryScrollUp = function (target, scrollable, elToScroll) {\n        if (scrollable.scrollTop && target.offsetTop < scrollable.scrollTop) {\n            elToScroll.scrollTop = target.offsetTop;\n        }\n    };\n    var tryScrollDown = function (target, scrollable, elToScroll) {\n        if (target.offsetTop + target.offsetHeight > scrollable.scrollTop + scrollable.offsetHeight &&\n            target.offsetHeight < scrollable.offsetHeight) {\n            elToScroll.scrollTop = target.offsetTop + target.offsetHeight - scrollable.offsetHeight;\n        }\n    };\n    var scrollTo = function (target, root, scrollFunc) {\n        var elToScroll = root.querySelector(scrollableValuesSel);\n        var scrollable = target && target.closest(scrollables);\n        if (!elToScroll || !scrollable || !target) {\n            return;\n        }\n        scrollFunc.forEach(function (scroll) { return scroll(target, scrollable, elToScroll); });\n    };\n    var tableMap = function (table) {\n        var rows = Array.from(table.rows);\n        var colsCount = Array.from((rows && rows[0] && rows[0].cells) || [])\n            .map(function (c) { return c.colSpan; })\n            .reduce(function (prev, cur) { return prev + cur; }, 0);\n        var map = rows.map(function () { return new Array(colsCount); });\n        rows.forEach(function (row, r) {\n            var curColSpan = 0;\n            Array.from(row.cells).forEach(function (c) {\n                for (var colSp = 0; colSp < c.colSpan; colSp++) {\n                    for (var rowSp = 0; rowSp < c.rowSpan; rowSp++) {\n                        var ind = map[r + rowSp].findIndex(function (val, curInd) { return curInd >= curColSpan && !val; });\n                        map[r + rowSp][ind] = c;\n                    }\n                    curColSpan++;\n                }\n            });\n        });\n        return map;\n    };\n    var navigationMap = function (root) {\n        var columnHeader = tableMap(root.querySelector([scrollableColumnHeaderSel, tableSel].join(' ')));\n        var rowHeader = tableMap(root.querySelector([scrollableRowHeaderSel, tableSel].join(' ')));\n        var values = tableMap(root.querySelector([scrollableValuesSel, tableSel].join(' ')));\n        var emptyCell = root.querySelector(emptyCellSel);\n        var emptyCellRow = new Array(rowHeader[0].length).fill(emptyCell);\n        var map = [];\n        for (var i = 0; i < columnHeader.length; i++) {\n            map.push(emptyCellRow.concat(columnHeader[i]));\n        }\n        for (var i$1 = 0; i$1 < rowHeader.length; i$1++) {\n            map.push(rowHeader[i$1].concat(values[i$1]));\n        }\n        return map;\n    };\n    var getTargetPos = function (map, target) {\n        for (var r = 0; r < map.length; r++) {\n            for (var c = 0; c < map[r].length; c++) {\n                if (map[r][c] === target) {\n                    return [r, c];\n                }\n            }\n        }\n        return [-1, -1];\n    };\n    var ctrlKey = function (ev) { return ev.ctrlKey || ev.metaKey; };\n    var cellAt = function (root, target, pos) {\n        var map = navigationMap(root);\n        var targetPos = getTargetPos(map, target);\n        var nextPos = [targetPos[0] + pos[0], targetPos[1] + pos[1]];\n        var next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n        while (next && next === target) {\n            nextPos = [nextPos[0] + pos[0], nextPos[1] + pos[1]];\n            next = map[nextPos[0]] && map[nextPos[0]][nextPos[1]];\n        }\n        return next;\n    };\n    var keyboardEvents$1 = {\n        keydown: {\n            ArrowLeft: function (target, nav, ev) {\n                ev.preventDefault();\n                var next = cellAt(nav.root, target, [0, -1]);\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n            },\n            ArrowRight: function (target, nav, ev) {\n                ev.preventDefault();\n                var next = cellAt(nav.root, target, [0, 1]);\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollDown, tryScrollUp]);\n            },\n            ArrowUp: function (target, nav, ev) {\n                ev.preventDefault();\n                var next = cellAt(nav.root, target, [-1, 0]);\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n            },\n            ArrowDown: function (target, nav, ev) {\n                ev.preventDefault();\n                var next = cellAt(nav.root, target, [1, 0]);\n                nav.focusElement(next, target);\n                scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollUp, tryScrollDown]);\n            },\n            o: function (_target, nav, _ev) {\n                if (!nav.root) {\n                    return;\n                }\n                // FIX: ADDED manually to fix an issue where depending on the order of the config element and button\n                // you either can open the configurator with Ctrl+O, or you can close the configurator with ESC\n                var next = nav.root.nextElementSibling;\n                if (!(next && next instanceof HTMLElement)) {\n                    return;\n                }\n\n                if (!next.matches('div.k-pivotgrid-configurator-button')) {\n                    next = next.nextElementSibling;\n                }\n\n                if (next && next instanceof HTMLElement && next.matches('div.k-pivotgrid-configurator-button')) {\n                    if (!nav.root.parentNode || nav.root.parentNode.querySelector(\".k-pivotgrid-configurator.k-hidden\")) {\n                        next.click();\n                    }\n\n                    setTimeout(function () {\n                        if (nav.root.parentNode) {\n                            var confHeader = nav.root.parentNode.querySelector('.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview');\n                            if (confHeader instanceof HTMLElement) {\n                                confHeader.setAttribute('tabindex', String(nav.tabIndex));\n                                confHeader.focus();\n                            }\n                        }\n                    }, 0);\n                }\n            },\n            Enter: onEnter,\n            Space: onEnter,\n            Home: function (target, nav, ev) {\n                var map = navigationMap(nav.root);\n                var ctrl = ctrlKey(ev);\n                var row = ctrl ? map[0] : (map.find(function (ro) { return Boolean(ro.find(function (x) { return x === target; })); }) || []);\n                var next = row[0];\n                if (next) {\n                    nav.focusElement(next, target);\n                    scrollTo(next, nav.root, [tryScrollRight, tryScrollLeft, tryScrollDown, tryScrollUp]);\n                    ev.preventDefault();\n                }\n            },\n            End: function (target, nav, ev) {\n                var map = navigationMap(nav.root);\n                var ctrl = ctrlKey(ev);\n                var row = ctrl ? map[map.length - 1] : (map.find(function (ro) { return Boolean(ro.find(function (x) { return x === target; })); }) || []);\n                var next = row && row[row.length - 1] || null;\n                if (next) {\n                    nav.focusElement(next, target);\n                    scrollTo(next, nav.root, [tryScrollLeft, tryScrollRight, tryScrollUp, tryScrollDown]);\n                    ev.preventDefault();\n                }\n            }\n        }\n    };\n    var mouseEvents$1 = {\n        click: function (target, nav) {\n            if (target && target instanceof HTMLElement) {\n                var prev = nav.elements.find(function (c) { return c.hasAttribute('tabindex'); }) || null;\n                nav.focusElement(target, prev);\n            }\n        }\n    };\n    /**\n     * The PivotGrid keyboard navigation functionality.\n     *\n     * Usage:\n     *\n     * On Initialize\n     * const navigation = new PivotGridNavigation({ tabindex: 0 });\n     *\n     * Turn on\n     * navigation.start(rootDomElement);\n     *\n     * On After Update\n     * navigation.update();\n     *\n     * On Destroy / Turn off\n     * navigation.stop();\n     */\n    var PivotGridNavigation = /*@__PURE__*/(function (Navigation) {\n        function PivotGridNavigation() {\n            Navigation.apply(this, arguments);\n            this.selectors = selectors$1;\n            this.mouseEvents = mouseEvents$1;\n            this.keyboardEvents = keyboardEvents$1;\n        }\n\n        if ( Navigation ) PivotGridNavigation.__proto__ = Navigation;\n        PivotGridNavigation.prototype = Object.create( Navigation && Navigation.prototype );\n        PivotGridNavigation.prototype.constructor = PivotGridNavigation;\n\n        return PivotGridNavigation;\n    }(Navigation));\n\n    var selectors = [\n        '.k-pivotgrid-configurator-content .k-form-field .k-fields-list-wrapper .k-treeview',\n        '.k-pivotgrid-configurator-content .k-chip',\n        '.k-pivotgrid-configurator-actions button'\n    ];\n    var onEscape = function (_target, nav, ev) {\n        if (ev.target instanceof HTMLElement) {\n            if (nav.root) {\n                var pivot = nav.root.previousElementSibling;\n                var confButton = nav.root.nextElementSibling;\n                var pivotCell = Array.from(pivot instanceof HTMLElement ? pivot.querySelectorAll('[tabindex]') : []).find(function (c) { return c.tabIndex >= 0; });\n                if (pivotCell instanceof HTMLElement) {\n                    pivotCell.focus();\n                    if (confButton instanceof HTMLElement) {\n                        confButton.click();\n                    }\n                }\n            }\n        }\n    };\n    var navigate = function (target, nav, ev, dir) {\n        ev.preventDefault();\n        var all = nav.elements;\n        var index = all.indexOf(target) + dir;\n        if (index < 0) {\n            index = all.length - 1;\n        }\n        nav.focusElement(all[index % all.length], target);\n    };\n    var onDelete = function (target, nav, ev) {\n        if (ev.target instanceof HTMLElement) {\n            var deleteButton = ev.target.querySelector('.k-icon.k-i-x-circle, .k-svg-icon.k-svg-i-x-circle');\n            if (deleteButton instanceof HTMLElement) {\n                ev.preventDefault();\n                navigate(target, nav, ev, -1);\n            }\n        }\n    };\n    var keyboardEvents = {\n        keydown: {\n            Tab: function (target, nav, ev) {\n                navigate(target, nav, ev, ev.shiftKey ? -1 : 1);\n            },\n            Escape: onEscape,\n            Delete: onDelete,\n            Backspace: onDelete\n        }\n    };\n    var mouseEvents = {\n        click: function (target, nav) {\n            if (target && target instanceof HTMLElement) {\n                var prev = nav.elements.find(function (c) { return c.hasAttribute('tabindex'); }) || null;\n                nav.focusElement(target, prev);\n            }\n        }\n    };\n    /**\n     * The PivotGrid Configurator keyboard navigation functionality.\n     *\n     * Usage:\n     *\n     * On Initialize\n     * const navigation = new ConfiguratorNavigation({ tabindex: 0 });\n     *\n     * Turn on\n     * navigation.start(rootDomElement);\n     *\n     * On After Update\n     * navigation.update();\n     *\n     * On Destroy / Turn off\n     * navigation.stop();\n     */\n    var ConfiguratorNavigation = /*@__PURE__*/(function (Navigation) {\n        function ConfiguratorNavigation() {\n            Navigation.apply(this, arguments);\n            this.selectors = selectors;\n            this.mouseEvents = mouseEvents;\n            this.keyboardEvents = keyboardEvents;\n        }\n\n        if ( Navigation ) ConfiguratorNavigation.__proto__ = Navigation;\n        ConfiguratorNavigation.prototype = Object.create( Navigation && Navigation.prototype );\n        ConfiguratorNavigation.prototype.constructor = ConfiguratorNavigation;\n\n        return ConfiguratorNavigation;\n    }(Navigation));\n\n    var __meta__ = {\n        id: \"pivot.configurator\",\n        name: \"PivotConfigurator\",\n        category: \"web\",\n        depends: [ \"dropdownlist\", \"treeview\", \"treeview.draganddrop\", \"pivot.fieldmenu\", \"html.chip\", \"html.chiplist\", \"pivot.common\", \"icons\" ],\n        hidden: true\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            Widget = ui.Widget,\n            common = window.kendo.pivotgrid.common,\n            fetchDiscover = common.fetchDiscover,\n            configuratorReducer = common.configuratorReducer,\n            PIVOT_CONFIGURATOR_ACTION = common.PIVOT_CONFIGURATOR_ACTION,\n            ns = \".kendoPivotConfigurator\",\n            HOVER_EVENTS = \"mouseenter\" + ns + \" mouseleave\" + ns,\n            SETTINGS_TEMPLATE = function (ref) {\n                var title = ref.title;\n                var headerTextId = ref.headerTextId;\n\n                return '<div class=\"k-pivotgrid-configurator-header\">' +\n                                                \"<div class=\\\"k-pivotgrid-configurator-header-text\\\" id=\\\"\" + headerTextId + \"\\\">\" + (encode(title)) + \"</div>\" +\n                                              '</div>';\n        },\n            CONTENT_TEMPLATE = function (ref) {\n                var formClass = ref.formClass;\n                var horizontal = ref.horizontal;\n                var ariaId = ref.ariaId;\n\n                return '<div class=\"k-pivotgrid-configurator-content\">' +\n                \"<form class=\\\"\" + (encode(formClass)) + \"\\\">\" +\n                    \"\" + (horizontal ? '<div class=\"k-form-field-wrapper\">' : '') +\n                    '<div class=\"k-form-field\">' +\n                        \"<label class=\\\"k-label\\\" id=\\\"\" + ariaId + \"-configurator-fields\\\">Fields</label>\" +\n                    '</div>' +\n                    '<div class=\"k-form-field\">' +\n                      '<div class=\"k-fields-list-wrapper\"></div>' +\n                    '</div>' +\n                    \"\" + (horizontal ? '</div><div class=\"k-form-field-wrapper\">' : '') +\n                    '<div class=\"k-form-field\">' +\n                        \"<label class=\\\"k-label\\\" id=\\\"\" + ariaId + \"-configurator-columns\\\">Columns</label>\" +\n                    '</div>' +\n                    '<div class=\"k-chip-list k-column-fields\"></div>' +\n                    '<div class=\"k-form-field\">' +\n                        \"<label class=\\\"k-label\\\" id=\\\"\" + ariaId + \"-configurator-rows\\\">Rows</label>\" +\n                    '</div>' +\n                    '<div class=\"k-chip-list k-row-fields\"></div>' +\n                    \"\" + (horizontal ? '</div><div class=\"k-form-field-wrapper\">' : '') +\n                    '<div class=\"k-form-field\">' +\n                        \"<label class=\\\"k-label\\\" id=\\\"\" + ariaId + \"-configurator-values\\\">Values</label>\" +\n                    '</div>' +\n                    '<div class=\"k-chip-list k-column-fields\"></div>' +\n                    \"\" + (horizontal ? '</div>' : '') +\n                '</form>' +\n            '</div>';\n        },\n            TARGET_ITEM_TEMPLATE = function (ref) {\n                var name = ref.name;\n\n                return '<span>' +\n                    \"<span class=\\\"k-chip-label\\\">\" + (encode(name)) + \"</span>\" +\n                '</span>';\n        },\n            ACTIONS_TEMPLATE = function (ref) {\n                        var cancelText = ref.cancelText;\n                        var applyText = ref.applyText;\n\n                        return '<div class=\"k-pivotgrid-configurator-actions k-actions k-hstack k-justify-content-end\">' +\n                      '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base\" aria-disabled=\"false\">' +\n                        \"<span class=\\\"k-button-text\\\">\" + (encode(cancelText)) + \"</span>\" +\n                      '</button>' +\n                      '<button class=\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-primary\" aria-disabled=\"false\">' +\n                        \"<span class=\\\"k-button-text\\\">\" + (encode(applyText)) + \"</span>\" +\n                      '</button>' +\n                    '</div>';\n        },\n            SETTING_CONTAINER_TEMPLATE = function (ref) {\n                var name = ref.name;\n\n                return (\"<div class=\\\"k-pivotgrid-target k-pivotgrid-configurator-section\\\"><strong>\" + (encode(name)) + \"</strong><div class=\\\"k-pivotgrid-target-wrap\\\"></div>\");\n        };\n\n        function addKPI(data) {\n            var found;\n            var idx = 0;\n            var length = data.length;\n\n            for (; idx < length; idx++) {\n                if (data[idx].type == 2) {\n                    found = true;\n                    break;\n                }\n            }\n\n            if (found) {\n                data.splice(idx + 1, 0, {\n                    caption: \"KPIs\",\n                    defaultHierarchy: \"[KPIs]\",\n                    name: \"KPIs\",\n                    uniqueName: \"[KPIs]\"\n                });\n            }\n        }\n\n        function kpiNode(node) {\n            return {\n                name: node.uniqueName,\n                type: node.type\n            };\n        }\n\n        function normalizeKPIs(data) {\n            for (var idx = 0, length = data.length; idx < length; idx++) {\n                data[idx].uniqueName = data[idx].name;\n                data[idx].type = \"kpi\";\n            }\n\n            return data;\n        }\n\n        function settingTargetFromNode(node) {\n            var target = $(node).closest(\".k-pivot-setting\");\n\n            if (target.length) {\n                return target.data(\"kendoPivotSettingTarget\");\n            }\n            return null;\n        }\n\n        function getIcons(sortIcon, options) {\n            var sortable = options.sortable;\n            var result = '';\n\n            if (sortable) {\n                result += sortIcon ? (\"<span class=\\\"k-chip-action\\\">\" + (kendo.ui.icon(sortIcon + \"-sm\")) + \"</span>\") : '';\n            }\n\n            if (options.filterable || sortable) {\n                result += \"<span class=\\\"k-setting-fieldmenu k-chip-action\\\">\" + (kendo.ui.icon(\"more-vertical\")) + \"</span>\";\n            }\n\n            result += \"<span class=\\\"k-setting-delete k-chip-action\\\">\" + (kendo.ui.icon(\"x\")) + \"</span>\";\n\n            return result;\n        }\n\n        var PivotConfiguratorV2 = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                this._ariaId = this.element.attr(\"id\") || kendo.guid();\n                this.element.addClass(\"k-widget k-pivotgrid-configurator k-pos-relative\");\n                this.element.attr({\n                    \"role\": \"dialog\",\n                    \"aria-hidden\": true,\n                    \"aria-labelledby\": ((this._ariaId) + \"-configurator-header\")\n                });\n\n                this._dataSource();\n\n                if (this.options.navigatable) {\n                    this._initPivotGridConfiguratorNavigation();\n                }\n\n                this._layout();\n\n                this.refresh();\n\n                if (options.height) {\n                    this.element.height(options.height);\n                }\n\n                kendo.notify(this);\n            },\n\n            events: [],\n\n            options: {\n                name: \"PivotConfiguratorV2\",\n                orientation: \"vertical\",\n                filterable: false,\n                sortable: false,\n                messages: {\n                    title: \"Settings\",\n                    cancelButtonText: \"Cancel\",\n                    applyButtonText: \"Apply\",\n                    measures: \"Select some fields to begin setup\",\n                    columns: \"Select some fields to begin setup\",\n                    rows: \"Select some fields to begin setup\"\n                }\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                if (this.measures) {\n                    this.measures.setDataSource(dataSource);\n                }\n\n                if (this.rows) {\n                    this.rows.setDataSource(dataSource);\n                }\n\n                if (this.columns) {\n                    this.columns.setDataSource(dataSource);\n                }\n\n                this.refresh();\n            },\n\n            _initPivotGridConfiguratorNavigation: function() {\n                var that = this;\n                that.configuratorNavigation = new ConfiguratorNavigation({ tabIndex: 0 });\n                that.configuratorNavigation.start(that.element[0]);\n\n                var firstCell = that.configuratorNavigation.first;\n\n                if (firstCell) {\n                    firstCell.setAttribute('tabindex', '0');\n                }\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler)\n                                   .unbind(\"error\", that._errorHandler)\n                                   .unbind(\"progress\", that._progressHandler);\n                } else {\n                    that._errorHandler = that._error.bind(that);\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSourceV2.create(that.options.dataSource);\n                that.dataSource.bind(\"change\", that._refreshHandler)\n                               .bind(\"error\", that._errorHandler)\n                               .bind(\"progress\", that._progressHandler);\n            },\n\n            _layout: function() {\n\n                var that = this;\n                var options = that.options;\n                var messages = options.messages;\n                var horizontal = options.orientation == \"horizontal\";\n\n                var panel = $(\"<div class='k-pivotgrid-configurator-panel k-pivotgrid-configurator-push'></div>\");\n\n                panel.addClass(horizontal ? \"k-pivotgrid-configurator-horizontal\" : \"k-pivotgrid-configurator-vertical\");\n\n                that.element.append(panel);\n\n                that.panel = panel;\n\n                $(SETTINGS_TEMPLATE({ title: this.options.messages.title, headerTextId: ((that._ariaId) + \"-configurator-header\") })).appendTo(that.panel);\n\n                $(CONTENT_TEMPLATE({ formClass: horizontal ? \"k-form k-form-horizontal\" : \"k-form\", filterable: options.filterable, horizontal: horizontal, ariaId: that._ariaId }))\n                    .appendTo(that.panel).find(\".k-chip-list\")\n                    .each(function(index, elm) {\n                        kendo.html.renderChipList(elm, $.extend({}, options));\n                        $(elm).attr({\n                            \"role\": \"listbox\",\n                            \"aria-orientation\": \"horizontal\",\n                        });\n                    });\n\n                that._fields();\n                $(ACTIONS_TEMPLATE({ cancelText: messages.cancelButtonText, applyText: messages.applyButtonText })).appendTo(that.panel);\n                that._targets();\n\n                that.element.on(\"click\" + ns, \".k-pivotgrid-configurator-actions > button\", that._actions.bind(that));\n            },\n\n            _actions: function(e) {\n                e.preventDefault();\n\n                var target = $(e.currentTarget).closest(\":not(path,svg)\");\n                if (target.index()) {\n                    this.columns._applyState();\n                    this.rows._applyState();\n                    this.measures._applyState();\n                    this.dataSource.read();\n                } else {\n                    this.columns._cancelChanges();\n                    this.rows._cancelChanges();\n                    this.measures._cancelChanges();\n                    this.treeView.dataSource.read();\n                }\n            },\n\n            _targets: function() {\n                var that = this;\n                var columns = that.panel.find(\".k-column-fields\").first();\n                var rows = that.panel.find(\".k-row-fields\");\n                var measures = that.panel.find(\".k-chip-list\").last();\n                var options = this.options;\n\n                var targetItemTemplate = function (ref) {\n                        var name = ref.name;\n                        var menuenabled = ref.menuenabled;\n\n                        var chip = kendo.html.renderChip(TARGET_ITEM_TEMPLATE({ name: name, menuenabled: menuenabled }), $.extend({}, options, {\n                            fillMode: \"solid\",\n                            themeColor: \"base\",\n                            rounded: \"full\",\n                            removable: true,\n                            removeIcon: \"x-circle\",\n                            actions: menuenabled ? [\n                                { icon: \"more-vertical\" }\n                            ] : null\n                        }));\n\n                        return chip;\n                    };\n\n                this.columns = this._createTarget(columns, {\n                    navigatable: options.navigatable,\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    template: targetItemTemplate,\n                    connectWith: rows,\n                    messages: {\n                        empty: options.messages.columns\n                    },\n                    configuratorNavigation: that.configuratorNavigation\n                });\n                this.columns.element.attr(\"aria-labelledby\", ((this._ariaId) + \"-configurator-header \" + (this._ariaId) + \"-configurator-columns\"));\n\n                this.rows = this._createTarget(rows, {\n                    navigatable: options.navigatable,\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    template: targetItemTemplate,\n                    setting: \"rows\",\n                    connectWith: columns,\n                    messages: {\n                        empty: this.options.messages.rows\n                    },\n                    configuratorNavigation: that.configuratorNavigation\n                });\n                this.rows.element.attr(\"aria-labelledby\", ((this._ariaId) + \"-configurator-header \" + (this._ariaId) + \"-configurator-rows\"));\n\n                this.measures = this._createTarget(measures, {\n                    navigatable: options.navigatable,\n                    setting: \"measures\",\n                    template: targetItemTemplate,\n                    messages: {\n                        empty: options.messages.measures\n                    },\n                    configuratorNavigation: that.configuratorNavigation\n                });\n\n                this.measures.element.attr(\"aria-labelledby\", ((this._ariaId) + \"-configurator-header \" + (this._ariaId) + \"-configurator-values\"));\n\n                [this.columns, this.rows, this.measures].forEach(function (x){ return x.element.find(\".k-chip\").attr(\"role\", \"option\"); });\n            },\n\n            _createTarget: function(element, options) {\n                var that = this;\n                return new kendo.ui.PivotSettingTargetV2(element, $.extend({\n                    dataSource: this.dataSource,\n                    hint: function(element) {\n                        return element.clone();\n                    },\n                    remove: function(e) {\n                        var item = that.treeView.wrapper\n                            .find(\"[data-name='\" + e.name + \"']\")\n                            .closest(\"li\");\n                        var id = item.attr(kendo.attr(\"uid\"));\n                        var dataItem = that.treeView.dataSource.getByUid(id);\n\n                        if (dataItem) {\n                            dataItem.checked = false;\n                            item.find(\"input\").attr(\"checked\", false);\n                        }\n                    },\n                    template: options.template\n                }, options));\n            },\n\n            _fields: function() {\n                var that = this;\n                var container = that.element.find(\".k-fields-list-wrapper\");\n\n                this.treeView = $((\"<div aria-labelledby=\\\"\" + (this._ariaId) + \"-configurator-header \" + (this._ariaId) + \"-configurator-fields\\\" />\")).appendTo(container)\n                    .kendoTreeView({\n                        checkboxes: {\n                            checkChildren: true,\n                            template: function (ref) {\n                                var item = ref.item;\n\n                                var result = '';\n\n                                if ((item.hasChildren || item.aggregator || item.local) && item.uniqueName !== \"[KPIs]\" && item.uniqueName !== \"[Measures]\" && item.uniqueName !== \"Measures\") {\n                                    result += \"<input type=\\\"checkbox\\\" data-name=\\\"\" + (encode(item.uniqueName)) + \"\\\" \" + (item.checked ? \"checked\" : \"\") + \" class=\\\"k-checkbox k-checkbox-md k-rounded-md\\\" id=\\\"\" + (encode(item.uid)) + \"\\\" tabindex=\\\"-1\\\">\";\n                                }\n\n                                return result;\n                            }\n                        },\n                        dataTextField: \"caption\",\n                        autoBind: false,\n                        check: function(e) {\n                          var dataItem = e.sender.dataItem(e.node);\n                          var action = {\n                            type: PIVOT_CONFIGURATOR_ACTION.toggleSelection,\n                            payload: dataItem\n                          };\n                          var state = {\n                            columnAxes: that.columns._state(),\n                            rowAxes: that.rows._state(),\n                            measureAxes: that.measures._state()\n                          };\n                          var result = configuratorReducer(state, action);\n\n                          if (that.dataSource.cubeSchema && result.measureAxes && result.measureAxes.length &&\n                            result.measureAxes.length > state.measureAxes.length) {\n                              that.dataSource.cubeSchema.restoreMeasure(result.measureAxes, dataItem);\n                          }\n\n                          if (dataItem.defaultHierarchy && dataItem.items && dataItem.items.length) {\n                              that._checkMembers([{ name: dataItem.defaultHierarchy }], dataItem.items);\n                              dataItem.items.trigger(\"change\");\n                          }\n\n                          if (result.columnAxes) {\n                              that.columns._state(result.columnAxes);\n                              that.columns._redraw();\n                          }\n                          if (result.rowAxes) {\n                              that.rows._state(result.rowAxes);\n                              that.rows._redraw();\n                          }\n                          if (result.measureAxes) {\n                              that.measures._state(result.measureAxes);\n                              that.measures._redraw();\n                          }\n                        },\n                        dataSource: this._treeViewDataSource()\n                     })\n                    .data(\"kendoTreeView\");\n\n                this.treeView.wrapper.off(\"click\", this.treeView._clickHandler);\n            },\n\n            _treeViewDataSource: function() {\n                var that = this;\n\n                return kendo.data.HierarchicalDataSource.create({\n                    schema: {\n                        model: {\n                            id: \"uniqueName\",\n                            hasChildren: function(item) {\n                                if (that.dataSource.cubeSchema && item.uniqueName !== \"Measures\") {\n                                    item.local = true;\n                                    return false;\n                                }\n                                return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                            }\n                        }\n                    },\n                    transport: {\n                        read: function(options) {\n                            var node;\n                            var transport = that.dataSource.transport;\n                            var catalog = transport.catalog();\n                            var cube = transport.cube();\n                            var fetchOptions = {\n                                url: transport.options.read\n                            };\n                            var columns = that.columns._state();\n                            var rows = that.rows._state();\n                            var measures = that.measures._state();\n                            var members = columns.concat(rows).concat(measures);\n                            var fields;\n                            var dsMeasures;\n                            var fetchOpts;\n\n                            if ($.isEmptyObject(options.data)) {\n                                if (that.dataSource.cubeSchema) {\n                                    fields = that.dataSource.cubeSchema.dimensions();\n                                    that._checkMembers(members, fields);\n                                    options.success(fields);\n                                } else {\n                                    fetchOpts = {\n                                        connection: {\n                                            catalog: catalog,\n                                            cube: cube\n                                        },\n                                        restrictions: {\n                                            catalogName: catalog,\n                                            cubeName: cube\n                                        },\n                                        command: 'schemaDimensions'\n                                    };\n\n                                    fetchDiscover(fetchOptions, fetchOpts)\n                                        .then(function(newFields) {\n                                            that._checkMembers(members, newFields);\n                                            addKPI(newFields);\n                                            options.success(newFields);\n                                         });\n                                }\n                            } else {\n                                //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                                node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                                if (that.dataSource.cubeSchema) {\n                                    dsMeasures = that.dataSource.measures();\n                                    that._checkMembers(members, dsMeasures);\n                                    options.success(dsMeasures);\n                                } else {\n                                    if (node.uniqueName === \"[KPIs]\") {\n                                        fetchDiscover(fetchOptions, that._getKPIOptions(catalog, cube))\n                                        .then(function(newFields) {\n                                            options.success(normalizeKPIs(newFields));\n                                        });\n                                    } else if (node.type == \"kpi\") {\n                                        options.success(buildKPImeasures(node));\n                                    } else {\n                                        fetchDiscover(fetchOptions ,that._loadFieldsCommand(node, catalog, cube))\n                                        .then(function(newFields) {\n                                            that._checkMembers(members, newFields);\n                                            options.success(newFields);\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                });\n            },\n\n            _checkMembers: function(members, newData) {\n                var hash = {};\n                var index = 0;\n\n                for (index = 0; index < members.length; index++) {\n                    hash[members[index].name] = true;\n                }\n\n                for (index = 0; index < newData.length; index++) {\n                    if (hash[newData[index].uniqueName]) {\n                        newData[index].checked = true;\n                    }\n                }\n            },\n\n            _getKPIOptions: function(catalog, cube) {\n                return {\n                    connection: {\n                        catalog: catalog,\n                        cube: cube\n                    },\n                    restrictions: {\n                        catalogName: catalog,\n                        cubeName: cube\n                    },\n                    command: 'schemaKPIs'\n                };\n            },\n\n            _loadFieldsCommand: function(field, catalog, cube) {\n                var command;\n                var dimensionUniqueName;\n                var hierarchyUniqueName;\n\n                if (field.type === 2) {\n                    command = 'schemaMeasures';\n                } else if (field.dimensionUniqueName) {\n                    command = 'schemaLevels';\n                    hierarchyUniqueName = field.uniqueName;\n                } else {\n                    command = 'schemaHierarchies';\n                    dimensionUniqueName = field.uniqueName;\n                }\n\n                var options = {\n                    connection: {\n                        catalog: catalog,\n                        cube: cube\n                    },\n                    restrictions: {\n                        catalogName: catalog,\n                        cubeName: cube,\n                        hierarchyUniqueName: hierarchyUniqueName,\n                        dimensionUniqueName: dimensionUniqueName\n                    },\n                    command: command\n                };\n\n                return options;\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.element, toggle);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(\"change\", this._refreshHandler);\n\n                this.element.off(ns);\n\n                this.rows.destroy();\n                this.columns.destroy();\n                this.measures.destroy();\n                this.treeView.destroy();\n\n                this.element = null;\n                this._refreshHandler = null;\n            },\n\n            refresh: function() {\n                if (this.treeView) {\n                    this.treeView.dataSource.fetch();\n                }\n\n                this._progress(false);\n            }\n\n        });\n\n        ui.plugin(PivotConfiguratorV2);\n\n        var PivotConfigurator = Widget.extend({\n            init: function(element, options) {\n                Widget.fn.init.call(this, element, options);\n\n                this.element.addClass(\"k-pivotgrid-configurator-panel kendo-jquery\");\n\n                if (this.options.height) {\n                    this.element.outerHeight(this.options.height);\n                }\n\n                this._dataSource();\n\n                this._layout();\n\n                this.refresh();\n\n                kendo.notify(this);\n            },\n\n            events: [],\n\n            options: {\n                name: \"PivotConfigurator\",\n                filterable: false,\n                sortable: false,\n                messages: {\n                    measures: \"Drop Data Fields Here\",\n                    columns: \"Drop Column Fields Here\",\n                    rows: \"Drop Rows Fields Here\",\n                    measuresLabel: \"Measures\",\n                    columnsLabel: \"Columns\",\n                    rowsLabel: \"Rows\",\n                    fieldsLabel: \"Fields\"\n                }\n            },\n\n            _dataSource: function() {\n                var that = this;\n\n                if (that.dataSource && that._refreshHandler) {\n                    that.dataSource.unbind(\"change\", that._refreshHandler)\n                                   .unbind(\"error\", that._errorHandler)\n                                   .unbind(\"progress\", that._progressHandler);\n                } else {\n                    that._errorHandler = that._error.bind(that);\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSource.create(that.options.dataSource);\n                that.dataSource.bind(\"change\", that._refreshHandler)\n                               .bind(\"error\", that._errorHandler)\n                               .bind(\"progress\", that._progressHandler);\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                if (this.measures) {\n                    this.measures.setDataSource(dataSource);\n                }\n\n                if (this.rows) {\n                    this.rows.setDataSource(dataSource);\n                }\n\n                if (this.columns) {\n                    this.columns.setDataSource(dataSource);\n                }\n\n                this.refresh();\n            },\n\n            _treeViewDataSource: function() {\n                var that = this;\n\n                return kendo.data.HierarchicalDataSource.create({\n                    schema: {\n                        model: {\n                            id: \"uniqueName\",\n                            hasChildren: function(item) {\n                                return !(\"hierarchyUniqueName\" in item) && !(\"aggregator\" in item);\n                            }\n                        }\n                    },\n                    transport: {\n                        read: function(options) {\n                            var promise;\n                            var node;\n                            var kpi;\n\n                            if ($.isEmptyObject(options.data)) {\n                                promise = that.dataSource.schemaDimensions();\n\n                                promise.done(function(data) {\n                                            if (!that.dataSource.cubeBuilder) {\n                                                addKPI(data);\n                                            }\n                                            options.success(data);\n                                        })\n                                        .fail(options.error);\n                            } else {\n                                //Hack to get the actual node as the HierarchicalDataSource does not support passing it\n                                node = that.treeView.dataSource.get(options.data.uniqueName);\n\n                                if (node.uniqueName === \"[KPIs]\") {\n                                    kpi = true;\n                                    promise = that.dataSource.schemaKPIs();\n                                    promise.done(function(data) {\n                                                options.success(normalizeKPIs(data));\n                                           })\n                                           .fail(options.error);\n                                } else if (node.type == \"kpi\") {\n                                    kpi = true;\n                                    options.success(buildKPImeasures(node));\n                                }\n\n                                if (!kpi) {\n                                    if (node.type == 2) { //measure\n                                        promise = that.dataSource.schemaMeasures();\n                                    } else if (node.dimensionUniqueName) { // hierarchy\n                                        promise = that.dataSource.schemaLevels(options.data.uniqueName);\n                                    } else { // dimension\n                                        promise = that.dataSource.schemaHierarchies(options.data.uniqueName);\n                                    }\n\n                                    promise.done(options.success)\n                                            .fail(options.error);\n                                }\n                            }\n                        }\n                    }\n                });\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.element, toggle);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _layout: function() {\n                $('<div class=\"k-pivotgrid-configurator\"><div class=\"k-pivotgrid-configurator-content\"></div></div>').appendTo(this.element);\n                this.form = this.element.find('.k-pivotgrid-configurator-content');\n\n                this._fields();\n                this._targets();\n            },\n\n            _fields: function() {\n                var container = $('<div class=\"k-pivotgrid-fields k-pivotgrid-configurator-section\"><strong>' + encode(this.options.messages.fieldsLabel) + '</strong><div class=\"k-fields-list-wrapper\"></div></div>').appendTo(this.form);\n\n                var template = function (ref) {\n                    var item = ref.item;\n\n                    var result = '';\n\n                    if (item.type == 2 || item.uniqueName == \"[KPIs]\") {\n                        result += kendo.ui.icon(item.type == 2 ? \"sum\" : \"caret-alt-expand\"/* \"kpi\" */);\n                    } else if (item.type && item.type !== \"kpi\") {\n                        result += kendo.ui.icon(\"arrows-axes\");\n                    }\n\n                    result += \"\" + (encode(item.caption || item.name));\n\n                    return result;\n                };\n\n                this.treeView = $(\"<div/>\").appendTo(container.find('.k-fields-list-wrapper'))\n                    .kendoTreeView({\n                        template: template,\n                        dataTextField: \"caption\",\n                        dragAndDrop: true,\n                        autoBind: false,\n                        dataSource: this._treeViewDataSource(),\n                        dragstart: function(e) {\n                            var dataItem = this.dataItem(e.sourceNode);\n\n                            if ((!dataItem.hasChildren && !dataItem.aggregator && !dataItem.measure) || (dataItem.type == 2) || dataItem.uniqueName === \"[KPIs]\") {\n                                e.preventDefault();\n                            }\n                        },\n                        drag: function(e) {\n                            var status = \"cancel\";\n                            var setting = settingTargetFromNode(e.dropTarget);\n\n                            if (setting && setting.validate(this.dataItem(e.sourceNode))) {\n                                status = \"plus\";\n                            }\n\n                            e.setStatusClass(status);\n                        },\n                        drop: function(e) {\n                            e.preventDefault();\n\n                            var setting = settingTargetFromNode(e.dropTarget);\n                            var node = this.dataItem(e.sourceNode);\n                            var idx, length, measures;\n                            var name;\n\n                            if (setting && setting.validate(node)) {\n                                name = node.defaultHierarchy || node.uniqueName;\n\n                                if (node.type === \"kpi\") {\n                                    measures = buildKPImeasures(node);\n                                    length = measures.length;\n                                    name = [];\n\n                                    for (idx = 0; idx < length; idx++) {\n                                        name.push(kpiNode(measures[idx]));\n                                    }\n                                } else if (node.kpi) {\n                                    name = [kpiNode(node)];\n                                }\n\n                                setting.add(name);\n                            }\n                        }\n                     })\n                    .data(\"kendoTreeView\");\n            },\n\n            _createTarget: function(element, options) {\n                var template;\n\n                template = function (ref) {\n                    var name = ref.name;\n                    var sortIcon = ref.sortIcon;\n\n                    return ''\n                    + \"<div class=\\\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\\\" data-\" + (kendo.ns) + \"name=\\\"\" + name + \"\\\">\"\n                        + '<span class=\"k-chip-content\">'\n                            + \"<span class=\\\"k-chip-label\\\">\" + name + \"</span>\"\n                        + '</span>'\n                        + '<span class=\"k-chip-actions k-field-actions\">'\n                        + getIcons(sortIcon, options)\n                        + '</span>'\n                    + '</div>';\n                };\n\n                return new kendo.ui.PivotSettingTarget(element, $.extend({\n                    dataSource: this.dataSource,\n                    template: template,\n                    emptyTemplate: function (data) { return (\"<span class=\\\"k-empty\\\">\" + data + \"</span>\"); }\n                }, options));\n            },\n\n            _targets: function() {\n                var container = $('<div class=\"k-pivotgrid-targets\"/>').appendTo(this.form);\n\n                var columnsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.columnsLabel, icon: \"columns\" })).appendTo(container);\n                var columns = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(columnsContainer.find('.k-pivotgrid-target-wrap'));\n\n                var rowsContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.rowsLabel, icon: \"rows\" })).appendTo(container);\n                var rows = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(rowsContainer.find('.k-pivotgrid-target-wrap'));\n\n                var measuresContainer = $(SETTING_CONTAINER_TEMPLATE({ name: this.options.messages.measuresLabel, icon: \"sum\" })).appendTo(container);\n                var measures = $('<div class=\"k-column-fields k-chip-list\" />').appendTo(measuresContainer.find('.k-pivotgrid-target-wrap'));\n\n                var options = this.options;\n\n                this.columns = this._createTarget(columns, {\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    connectWith: rows,\n                    messages: {\n                        empty: options.messages.columns,\n                        fieldMenu: options.messages.fieldMenu\n                    }\n                });\n\n                this.rows = this._createTarget(rows, {\n                    filterable: options.filterable,\n                    sortable: options.sortable,\n                    setting: \"rows\",\n                    connectWith: columns,\n                    messages: {\n                        empty: this.options.messages.rows,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n\n                this.measures = this._createTarget(measures, {\n                    setting: \"measures\",\n                    messages: {\n                        empty: options.messages.measures\n                    }\n                });\n\n                columns\n                    .add(rows)\n                    .add(measures)\n                    .on(HOVER_EVENTS, \".k-item:not(.k-empty)\", this._toggleHover);\n            },\n\n            _toggleHover: function(e) {\n                $(e.currentTarget).closest(\":not(path,svg)\").toggleClass(\"k-hover\", e.type === \"mouseenter\");\n            },\n\n            _resize: function() {\n                var element = this.element;\n                var height = this.options.height;\n\n                if (!height) {\n                    return;\n                }\n\n                element.outerHeight(height);\n            },\n\n            refresh: function() {\n                var dataSource = this.dataSource;\n\n                if (dataSource.cubeBuilder || this._cube !== dataSource.cube() || this._catalog !== dataSource.catalog()) {\n                    this.treeView.dataSource.fetch();\n                }\n\n                this._catalog = this.dataSource.catalog();\n                this._cube = this.dataSource.cube();\n\n                this._resize();\n\n                this._progress(false);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(\"change\", this._refreshHandler);\n\n                this.form.find(\".k-pivot-setting\").off(ns);\n\n                this.rows.destroy();\n                this.columns.destroy();\n                this.measures.destroy();\n                this.treeView.destroy();\n\n                this.element = null;\n                this._refreshHandler = null;\n            }\n        });\n\n        function kpiMeasure(name, measure, type) {\n            return {\n                hierarchyUniqueName: name,\n                uniqueName: measure,\n                caption: measure,\n                measure: measure,\n                name: measure,\n                type: type,\n                kpi: true\n            };\n        }\n\n        function buildKPImeasures(node) {\n            var name = node.name;\n            return [\n                kpiMeasure(name, node.value, \"value\"),\n                kpiMeasure(name, node.goal, \"goal\"),\n                kpiMeasure(name, node.status, \"status\"),\n                kpiMeasure(name, node.trend, \"trend\")\n            ];\n        }\n\n        kendo.cssProperties.registerPrefix(\"HTMLChip\", \"k-chip-\");\n\n        kendo.cssProperties.registerValues(\"HTMLChip\", [{\n            prop: \"rounded\",\n            values: kendo.cssProperties.roundedValues.concat([['full', 'full']])\n        }]);\n\n        ui.plugin(PivotConfigurator);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}