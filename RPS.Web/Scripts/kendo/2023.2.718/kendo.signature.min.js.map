{"version":3,"file":"kendo.signature.min.js","names":["global","factory","exports","module","require","define","amd","globalThis","self","kendosignature","js","this","window","kendo","inputs","kendoDrawing","_a","util","elementOffset","limitValue","Point","geometry","Rect","transform","noop","SignaturePad","element","options","lastMoveTime","Object","assign","scale","precision","samplingRate","smooth","color","backgroundColor","strokeWidth","onChange","onDraw","onDrawEnd","pathOptions","stroke","width","lineCap","lineJoin","initSurface","attachEvents","prototype","destroy","detachEvents","clear","rootGroup","path","defineProperty","get","Boolean","points","enumerable","configurable","toString","set","value","MultiPath","parse","append","loadImage","data","size","height","contentWidth","contentHeight","importWidth","importHeight","scaleX","scaleY","Math","min","img","Image","exportImage","_b","exportWidth","exportHeight","exportRect","exportGroup","Group","clip","Path","fromRect","contentGroup","frame","fill","children","push","apply","resize","surface","setOptions","background","Surface","create","type","style","touchAction","offsetWidth","offsetHeight","draw","onPointerDown","bind","onPointerMove","onPointerUp","addEventListener","removeEventListener","touchPoint","e","offset","pageX","pageY","left","top","readonly","isPrimary","button","isMainButton","setPointerCapture","pointerId","point","moveTo","now","Date","getTime","lastPoint","length","minDelta","distanceTo","lineTo","segments","curveFromPoints","paths","splice","pathData","common","drawing","$","undefined$1","Widget","ui","Dialog","html","outerWidth","_outerWidth","outerHeight","_outerHeight","Pad","ns","CHANGE","OPEN","CLOSE","CLICK","Signature","extend","init","that","fn","call","_createElements","maximizable","_createInput","wrapper","getComputedStyle","_createPad","_createDialogPad","_attachHandlers","_assignLabel","_pad","_dialogPad","enable","name","fillMode","hideLine","label","popupScale","rounded","exportScale","events","currentOptions","oldBtnClass","getValidCssClass","btns","add","_dialogPadEl","find","targets","removeClass","_clearCssClasses","deepExtend","_destroyPad","_destroyDialog","pad","i","copyPath","_hideLine","_applyCssClasses","toggle","addClass","removeAttr","close","_dialog","open","off","empty","toggleClass","renderButton","icon","insertAfter","_dialogEl","_value","_input","val","reset","attr","_ariaLabel","on","trigger","autocomplete","required","appendTo","remove","line","maximize","padOptions","then","hide","show","canvas","title","closable","keyCode","keys","ESC","cssProperties","registerPrefix","plugin","jQuery"],"sources":["kendo.signature.js"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('kendo.core.js'), require('kendo.drawing.js'), require('kendo.dialog.js'), require('kendo.html.button.js')) :\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.drawing', 'kendo.dialog', 'kendo.html.button'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.kendosignature = global.kendosignature || {}, global.kendosignature.js = factory()));\n})(this, (function () {\n    (function () {\n\n    window.kendo = window.kendo || {};\n    window.kendo.inputs = window.kendo.inputs || {};\n    (function (exports, kendoDrawing) {\n\n        var _a = kendoDrawing.util, elementOffset = _a.elementOffset, limitValue = _a.limitValue;\n\n        var Point = kendo.geometry.Point, Rect = kendo.geometry.Rect, transform = kendo.geometry.transform;\n        var noop = function () { };\n        var DECIMAL_DIGITS = 3;\n        var DEFAULT_COLOR = '#000';\n        var DEFAULT_BACKGROUND_COLOR = '#fff';\n        var DEFAULT_PRECISION = 1;\n        var DEFAULT_SAMPLING_RATE = 200; // Updates per second\n        var DEFAULT_STROKE_WIDTH = 1;\n        var DEFAULT_WIDTH = 750;\n        var DEFAULT_HEIGHT = 250;\n        var DEFAULT_SCALE = 1;\n        // Export images at maximized scale (3x) and 2x pixel density to cover HiDPI screens.\n        var DEFAULT_EXPORT_SCALE = 6;\n        var SignaturePad = /** @class */ (function () {\n            function SignaturePad(element, options) {\n                if (options === void 0) { options = {}; }\n                this.element = element;\n                this.lastMoveTime = 0;\n                this.options = Object.assign({\n                    scale: DEFAULT_SCALE,\n                    precision: DEFAULT_PRECISION,\n                    samplingRate: DEFAULT_SAMPLING_RATE,\n                    smooth: options.smooth !== false,\n                    color: options.color || DEFAULT_COLOR,\n                    backgroundColor: options.backgroundColor || DEFAULT_BACKGROUND_COLOR,\n                    strokeWidth: DEFAULT_STROKE_WIDTH,\n                    onChange: noop,\n                    onDraw: noop,\n                    onDrawEnd: noop\n                }, options);\n                this.pathOptions = {\n                    stroke: {\n                        color: this.options.color,\n                        width: this.options.strokeWidth,\n                        lineCap: 'round',\n                        lineJoin: 'round'\n                    }\n                };\n                this.initSurface();\n                this.attachEvents();\n            }\n            SignaturePad.prototype.destroy = function () {\n                this.detachEvents();\n            };\n            SignaturePad.prototype.clear = function () {\n                this.rootGroup.clear();\n                this.path = null;\n            };\n            Object.defineProperty(SignaturePad.prototype, \"isDrawing\", {\n                get: function () {\n                    return Boolean(this.points);\n                },\n                enumerable: false,\n                configurable: true\n            });\n            Object.defineProperty(SignaturePad.prototype, \"pathData\", {\n                get: function () {\n                    var _a;\n                    return (_a = this.path) === null || _a === void 0 ? void 0 : _a.toString(DECIMAL_DIGITS);\n                },\n                set: function (value) {\n                    this.clear();\n                    this.path = kendoDrawing.MultiPath.parse(value, this.pathOptions);\n                    this.rootGroup.append(this.path);\n                },\n                enumerable: false,\n                configurable: true\n            });\n            SignaturePad.prototype.loadImage = function (data, size) {\n                if (size === void 0) { size = []; }\n                if (!data) {\n                    this.clear();\n                    return;\n                }\n                var _a = this.size, width = _a[0], height = _a[1];\n                var contentWidth = width / this.options.scale;\n                var contentHeight = height / this.options.scale;\n                var importWidth = size[0] || contentWidth * DEFAULT_EXPORT_SCALE;\n                var importHeight = size[1] || contentHeight * DEFAULT_EXPORT_SCALE;\n                var scaleX = contentWidth / importWidth;\n                var scaleY = contentHeight / importHeight;\n                var scale = Math.min(scaleX, scaleY);\n                var img = new kendoDrawing.Image(data, new kendo.geometry.Rect([0, 0], [importWidth, importHeight]));\n                img.transform(transform().scale(scale, scale));\n                this.clear();\n                this.rootGroup.append(img);\n            };\n            SignaturePad.prototype.exportImage = function (options) {\n                var _a;\n                var _b = this.size, width = _b[0], height = _b[1];\n                var contentWidth = width / this.options.scale;\n                var contentHeight = height / this.options.scale;\n                var exportWidth = (options === null || options === void 0 ? void 0 : options.width) || contentWidth * DEFAULT_EXPORT_SCALE;\n                var exportHeight = (options === null || options === void 0 ? void 0 : options.height) || contentHeight * DEFAULT_EXPORT_SCALE;\n                var scaleX = exportWidth / contentWidth;\n                var scaleY = exportHeight / contentHeight;\n                var scale = Math.min(scaleX, scaleY);\n                var exportRect = new Rect([0, 0], [exportWidth, exportHeight]);\n                var exportGroup = new kendoDrawing.Group({\n                    clip: kendoDrawing.Path.fromRect(exportRect)\n                });\n                var contentGroup = new kendoDrawing.Group({\n                    transform: transform().scale(scale, scale)\n                });\n                var frame = kendoDrawing.Path.fromRect(exportRect, {\n                    fill: {\n                        color: this.options.backgroundColor\n                    }\n                });\n                exportGroup.append(frame);\n                exportGroup.append(contentGroup);\n                (_a = contentGroup.children).push.apply(_a, this.rootGroup.children);\n                return kendoDrawing.exportImage(exportGroup, Object.assign({\n                    width: exportWidth,\n                    height: exportHeight\n                }, options));\n            };\n            SignaturePad.prototype.resize = function () {\n                this.surface.resize(true);\n            };\n            SignaturePad.prototype.setOptions = function (options) {\n                Object.assign(this.options, options);\n                this.pathOptions.stroke.color = this.options.color;\n                this.pathOptions.stroke.width = this.options.strokeWidth;\n                if (this.path) {\n                    this.path.options.set('stroke.color', this.options.color);\n                    this.path.options.set('stroke.width', this.options.strokeWidth);\n                }\n                this.background.options.set('fill.color', this.options.backgroundColor);\n            };\n            SignaturePad.prototype.initSurface = function () {\n                this.surface = kendoDrawing.Surface.create(this.element, { type: 'canvas' });\n                this.element.style.touchAction = 'none';\n                var scale = this.options.scale;\n                this.rootGroup = new kendoDrawing.Group({\n                    transform: transform().scale(scale, scale)\n                });\n                // The signature is not resizable, store initial dimensions.\n                var width = this.element.offsetWidth || DEFAULT_WIDTH;\n                var height = this.element.offsetHeight || DEFAULT_HEIGHT;\n                this.size = [width, height];\n                this.background = kendoDrawing.Path.fromRect(new Rect([0, 0], this.size), {\n                    fill: {\n                        color: this.options.backgroundColor\n                    }\n                });\n                this.surface.draw(this.background);\n                this.surface.draw(this.rootGroup);\n            };\n            SignaturePad.prototype.attachEvents = function () {\n                this.onPointerDown = this.onPointerDown.bind(this);\n                this.onPointerMove = this.onPointerMove.bind(this);\n                this.onPointerUp = this.onPointerUp.bind(this);\n                this.element.addEventListener('pointerdown', this.onPointerDown);\n                this.element.addEventListener('pointermove', this.onPointerMove);\n                this.element.addEventListener('pointerup', this.onPointerUp);\n            };\n            SignaturePad.prototype.detachEvents = function () {\n                this.element.removeEventListener('pointerdown', this.onPointerDown);\n                this.element.removeEventListener('pointermove', this.onPointerMove);\n                this.element.removeEventListener('pointerup', this.onPointerUp);\n            };\n            SignaturePad.prototype.touchPoint = function (e) {\n                var offset = elementOffset(this.element);\n                var pageX = e.pageX;\n                var pageY = e.pageY;\n                var scale = 1 / this.options.scale;\n                return new Point(pageX - offset.left, pageY - offset.top).scale(scale, scale);\n            };\n            SignaturePad.prototype.onPointerDown = function (e) {\n                if (this.options.readonly || !e.isPrimary || !isMainButton(e)) {\n                    return;\n                }\n                if (!this.path) {\n                    this.path = new kendoDrawing.MultiPath(this.pathOptions);\n                    this.rootGroup.append(this.path);\n                }\n                this.options.onDraw();\n                this.element.setPointerCapture(e.pointerId);\n                var point = this.touchPoint(e);\n                this.points = [point];\n                this.path.moveTo(point);\n            };\n            SignaturePad.prototype.onPointerMove = function (e) {\n                if (!this.points || !e.isPrimary) {\n                    return;\n                }\n                var now = (new Date()).getTime();\n                var elapsed = now - this.lastMoveTime;\n                var minTimeDelta = 1000 / limitValue(this.options.samplingRate, 1, 10000);\n                if (elapsed < minTimeDelta) {\n                    return;\n                }\n                else {\n                    this.lastMoveTime = now;\n                }\n                var point = this.touchPoint(e);\n                var lastPoint = this.points[this.points.length - 1];\n                var minDelta = 1 / limitValue(this.options.precision, 0.01, 100);\n                if (point.distanceTo(lastPoint) < minDelta) {\n                    return;\n                }\n                this.points.push(point);\n                this.path.lineTo(point);\n            };\n            SignaturePad.prototype.onPointerUp = function (e) {\n                if (!e.isPrimary || !this.path || !this.points || this.options.readonly) {\n                    return;\n                }\n                if (this.options.smooth) {\n                    var segments = kendoDrawing.Path.curveFromPoints(this.points);\n                    this.path.paths.splice(this.path.paths.length - 1, 1, segments);\n                }\n                this.points = null;\n                this.options.onDrawEnd();\n                this.options.onChange(this.pathData);\n            };\n            return SignaturePad;\n        }());\n        function isMainButton(e) {\n            return typeof (e.button) !== 'number' || e.button === 0;\n        }\n\n        exports.SignaturePad = SignaturePad;\n\n    })(window.kendo.inputs.common = window.kendo.inputs.common || {}, window.kendo.drawing);\n\n\n    })();\n\n    var __meta__ = {\n        id: \"signature\",\n        name: \"Signature\",\n        category: \"web\",\n        description: \"The Signature component ...\",\n        depends: [ \"core\", \"dialog\", \"html.button\", \"drawing\" ]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            Dialog = kendo.ui.Dialog,\n            html = kendo.html,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            Pad = kendo.inputs.common.SignaturePad,\n            ns = \".kendoSignature\",\n            DEFAULT_BACKGROUND_COLOR = '#ffffff',\n            CHANGE = \"change\",\n            OPEN = \"open\",\n            CLOSE = \"close\",\n            CLICK = \"click\",\n            TABINDEX = \"tabindex\",\n            ARIA_LABEL = \"aria-label\",\n            ARIA_LABELLEDBY = \"aria-labelledby\";\n\n        var Signature = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                options = options || {};\n\n                Widget.fn.init.call(that, element, options);\n\n                that._createElements(that.element, that.options.maximizable ? \"maxi\" : \"\", false, 1);\n                that._createInput();\n                that.wrapper = that.element;\n                if (!that.options.backgroundColor) {\n                    that.options.backgroundColor = getComputedStyle(that.element[0]).backgroundColor || DEFAULT_BACKGROUND_COLOR;\n                }\n\n                that._createPad();\n                that._createDialogPad();\n                that._attachHandlers();\n                that._assignLabel();\n\n                if (that.options.value) {\n                    that._pad.loadImage(that.options.value);\n                    that._dialogPad.loadImage(that.options.value);\n                }\n\n                if (that.options.readonly) {\n                    that.readonly();\n                }\n\n                if (!that.options.enable) {\n                    that.enable(false);\n                }\n            },\n\n            options: {\n                name: \"Signature\",\n                color: \"#000000\",\n                enable: true,\n                fillMode: \"solid\",\n                hideLine: false,\n                label: \"\",\n                maximizable: true,\n                popupScale: 3,\n                readonly: false,\n                rounded: \"medium\",\n                size: \"medium\",\n                smooth: false,\n                strokeWidth: 1,\n                exportScale: 2,\n                value: \"\"\n            },\n\n            events: [ CHANGE, OPEN, CLOSE],\n\n            setOptions: function(options) {\n                var currentOptions = this.options;\n                var path;\n                var oldBtnClass = kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size);\n                var btns = this.element.add(this._dialogPadEl).find(\".\" + oldBtnClass);\n                var targets = $(this._pad.element).add(this._dialogPad.element);\n\n                btns.removeClass(oldBtnClass);\n                this._clearCssClasses(currentOptions);\n                this.element.removeClass(kendo.getValidCssClass(\"k-signature-\", \"size\", currentOptions.size));\n                kendo.deepExtend(currentOptions, options);\n                this.options = currentOptions;\n                this.element.width(currentOptions.width);\n                this.element.height(currentOptions.height);\n                this._dialogPadEl.width(currentOptions.width * currentOptions.popupScale);\n                this._dialogPadEl.height(currentOptions.height * currentOptions.popupScale);\n                path = this._pad.path;\n                this._destroyPad();\n                this._destroyDialog();\n                this._createPad();\n                this._createDialogPad();\n                copyPath(this._pad, path);\n                this.enable(currentOptions.enable);\n                this.readonly(currentOptions.readonly);\n                this._hideLine(this.element);\n                this._hideLine(this._dialogPadEl);\n                this._applyCssClasses(this.element);\n                this.element.find(\".k-signature-maximize\").toggle(currentOptions.maximizable);\n                this.element.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n                this.element.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n                btns.addClass(kendo.getValidCssClass(\"k-button-\", \"size\", currentOptions.size));\n\n                targets.removeAttr(\"aria-label\");\n                this._assignLabel();\n            },\n\n            close: function() {\n                if (!this._dialog) {\n                    return;\n                }\n                this._dialog.close();\n            },\n\n            open: function() {\n                if (!this.options.maximizable || !this._dialog) {\n                    return;\n                }\n                this._dialog.open();\n            },\n\n            destroy: function() {\n                var that = this;\n                that._destroyPad();\n\n                that._destroyDialog();\n\n                that.element.off(ns);\n                that.element.empty();\n                Widget.fn.destroy.call(that);\n            },\n\n            enable: function(enable) {\n                var enable = enable !== false;\n                if (!enable) {\n                    this._dialog.close();\n                }\n\n                this.element.find(\".k-button\").toggle(enable);\n                this.element.toggleClass(\"k-disabled\", !enable);\n                this._pad.options.readonly = !enable;\n                this._dialogPad.options.readonly = !enable;\n            },\n\n            readonly: function(toggle) {\n                var that = this;\n                var toggle = toggle !== false;\n\n                that._pad.options.readonly = toggle;\n                that._dialogPad.options.readonly = toggle;\n\n                var clearButton = that.element.find(\".k-signature-clear\");\n\n                if (!clearButton.length && !toggle) {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).insertAfter(that.element.find(\".k-signature-actions-bottom\"));\n\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).insertAfter(that._dialogEl.find(\".k-signature-actions-bottom\"));\n                }\n\n                that.element.find(\".k-signature-clear\").toggle(!toggle);\n                that._dialogEl.find(\".k-signature-clear\").toggle(!toggle);\n            },\n\n            value: function(value) {\n                if (value !== undefined$1) {\n                    this._value = value;\n                    this._input.val(value);\n                    this._pad.loadImage(value);\n                }\n\n                return this._value;\n            },\n\n            reset: function() {\n                this._dialogPad.clear();\n                this._pad.clear();\n                this._value = \"\";\n            },\n\n            _assignLabel: function() {\n                var targets = $(this._pad.element).add(this._dialogPad.element);\n\n                if (this.options.label) {\n                    targets.attr(ARIA_LABEL, this.options.label);\n                } else {\n                    this._ariaLabel(targets);\n                }\n\n                this.element.removeAttr(ARIA_LABELLEDBY);\n            },\n\n            _attachHandlers: function() {\n                var that = this;\n                that.element\n                    .on(CLICK + ns, \".k-signature-clear\", function() {\n                        that.reset();\n                    })\n                    .on(CLICK + ns, \".k-signature-maximize\", function() {\n                        that._dialog.open();\n                        that._dialog.wrapper.find(\".k-signature-minimize\").trigger(\"focus\");\n                    });\n            },\n\n            _createInput: function() {\n                var that = this;\n                var name = that.element.attr(\"name\");\n                var autocomplete = that.element.attr(\"autocomplete\");\n                var required = that.element.attr(\"required\");\n\n                that._input = $(\"<input class='k-hidden' aria-hidden='true'/>\").appendTo(that.element);\n\n                if (name) {\n                    that._input.attr(\"name\", name);\n                    that.element.removeAttr(\"name\");\n                }\n\n                if (autocomplete) {\n                    that._input.attr(\"autocomplete\", autocomplete);\n                    that.element.removeAttr(\"autocomplete\");\n                }\n\n                if (required) {\n                    that._input.attr(\"required\", required);\n                    that.element.removeAttr(\"required\");\n                }\n            },\n\n            _destroyPad: function() {\n                if (this._pad) {\n                    kendo.destroy(this.element.find(\".k-signature-canvas\"));\n                    this._pad = null;\n                    this.element.find(\".k-signature-canvas\").empty();\n                }\n            },\n\n            _destroyDialog: function() {\n                if (this._dialogPad) {\n                    this._dialogPad.destroy();\n                    this._dialogPad = null;\n                    this._dialogEl.off(ns);\n                    this._dialog.destroy();\n                    this._dialog = null;\n                    this._dialogEl.remove();\n                    this._dialogEl = null;\n                }\n            },\n\n            _hideLine: function(wrapper) {\n                var line = wrapper.find(\".k-signature-line\");\n                if (!this.options.hideLine && !line.length) {\n                    $(\"<div class='k-signature-line'>\").appendTo(wrapper);\n                }\n\n                if (this.options.hideLine) {\n                    line.remove();\n                }\n            },\n\n            _createElements: function(wrapper, button, maximize, scale) {\n                $(\"<div class='k-signature-canvas' role='img' tabindex='0'>\").appendTo(wrapper);\n\n                this._hideLine(wrapper);\n\n                $(\"<div class='k-signature-actions k-signature-actions-top'></div>\").appendTo(wrapper);\n\n                if (button == \"mini\") {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-minimize k-rotate-180\" aria-label=\"Minimize signature\"></button>', {\n                        icon: \"hyperlink-open\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n                }\n\n                if (button == \"maxi\") {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-maximize\" aria-label=\"Maximize signature\"></button>', {\n                        icon: \"hyperlink-open\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-top\"));\n                }\n\n                $(\"<div class='k-signature-actions k-signature-actions-bottom'></div>\").appendTo(wrapper);\n\n                if (!this.options.readonly) {\n                    $(html.renderButton('<button class=\"k-signature-action k-signature-clear\"  aria-label=\"Clear signature\"></button>', {\n                        icon: \"x\",\n                        size: this.options.size,\n                        fillMode: \"flat\"\n                    })).appendTo(wrapper.find(\".k-signature-actions-bottom\"));\n                }\n\n                wrapper.addClass(\"k-input k-signature\");\n\n                wrapper.width(this.options.width * scale);\n                wrapper.height(this.options.height * scale);\n\n                if (maximize) {\n                    wrapper.addClass(\"k-signature-maximized\");\n                }\n\n                this._applyCssClasses(wrapper);\n                //workaround as the sizings are added to -signature- but roundings to -input-\n                wrapper.removeClass(kendo.getValidCssClass(\"k-input-\", \"size\", this.options.size));\n                wrapper.addClass(kendo.getValidCssClass(\"k-signature-\", \"size\", this.options.size));\n            },\n\n            _createPad: function() {\n                var that = this;\n                var padOptions = $.extend(true, {}, that.options, {\n                    onChange: function() {\n                        var width = outerWidth(that.element, false);\n                        var height = outerHeight(that.element, false);\n                        that._pad.exportImage({\n                            width: width * that.options.exportScale,\n                            height: height * that.options.exportScale\n                        }).then(function(val) {\n                            that._value = val;\n                            that._input.val(val);\n                            that.trigger(CHANGE);\n                        });\n\n                        that._pad.exportImage({\n                            width: width * that.options.exportScale * that.options.popupScale,\n                            height: height * that.options.exportScale * that.options.popupScale\n                        }).then(function(val) {\n                            that._dialogPad.loadImage(val);\n                        });\n                    },\n                    onDraw: function() {\n                        that.element.find(\".k-button\").hide();\n                    },\n                    onDrawEnd: function() {\n                        that.element.find(\".k-button\").show();\n                    }\n                });\n\n                that._pad = new Pad(that.element.find(\".k-signature-canvas\")[0], padOptions);\n            },\n\n            _createDialogPad: function() {\n                var that = this;\n                var canvas = null;\n\n                that._dialogEl = $(\"<div>\").appendTo(that.element);\n                that._dialog = new Dialog(that._dialogEl, {\n                    title: false,\n                    closable: false,\n                    open: function() {\n                        that.trigger(OPEN);\n                    },\n                    close: function() {\n                        that.trigger(CLOSE);\n                    }\n                });\n\n                that._dialogEl\n                    .removeAttr(TABINDEX)\n                    .on(\"keydown\", function(e) {\n                        if (e.keyCode === kendo.keys.ESC) {\n                            that._dialog.close();\n                        }\n                    });\n\n                that._dialogPadEl = $(\"<div>\").appendTo(that._dialog.element);\n                that._createElements(that._dialogPadEl, \"mini\", true, this.options.popupScale);\n                canvas = that._dialogPadEl.find(\".k-signature-canvas\")[0];\n\n                that._dialogPad = new Pad(canvas, $.extend(true, {}, that.options, {\n                    scale: that.options.popupScale,\n                    onChange: function() {\n                        var width = outerWidth(that.element, false);\n                        var height = outerHeight(that.element, false);\n                        that._dialogPad.exportImage({\n                            width: width * that.options.exportScale,\n                            height: height * that.options.exportScale\n                        }).then(function(val) {\n                            that._pad.loadImage(val);\n                            that._value = val;\n                            that._input.val(val);\n                            that.trigger(CHANGE);\n                        });\n                    },\n                    onDraw: function() {\n                        that._dialogEl.find(\".k-button\").hide();\n                    },\n                    onDrawEnd: function() {\n                        that._dialogEl.find(\".k-button\").show();\n                    }\n                }));\n\n                // Dialog should be opened at first for drawing to work\n                that._dialog.close();\n                that._dialogEl\n                    .on(CLICK + ns, \".k-signature-clear\", function() {\n                        that.reset();\n                    })\n                    .on(CLICK + ns, \".k-signature-minimize\", function() {\n                        that._dialog.close();\n                    });\n            }\n        });\n\n        function copyPath(pad, path) {\n            if (!path || !path.paths || !path.paths.length) {\n                return;\n            }\n            pad.path = new kendo.drawing.MultiPath(pad.pathOptions);\n            pad.rootGroup.append(pad.path);\n\n            for (var i = 0; i < path.paths.length; i++) {\n                pad.path.paths.push(path.paths[i]);\n            }\n            pad.options.onChange();\n        }\n\n        kendo.cssProperties.registerPrefix(\"Signature\", \"k-input-\");\n\n        kendo.ui.plugin(Signature);\n\n    })(window.kendo.jQuery);\n    var kendo$1 = kendo;\n\n    return kendo$1;\n\n}));\n"]}